
AVRASM ver. 2.1.30  D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P07_Processing\E03\Debug\List\e03.asm Tue May 19 17:04:57 2020

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : AT90USB1286
                 ;Program type           : Application
                 ;Clock frequency        : 2.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME AT90USB1286
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR1A=0xC8
                 	.EQU UDR1=0xCE
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x20FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0058 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00004c 2710
00004d 03e8
00004e 0064
00004f 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000050 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000051 1000
000052 0100
000053 0010
000054 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000055 6425
000056 0d0a
D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P07_Processing\E03\Debug\List\e03.asm(1146): warning: .cseg .db misalignment - padding zero byte
000057 0000      	.DB  0x25,0x64,0xA,0xD,0x0
                 __RESET:
000058 94f8      	CLI
000059 27ee      	CLR  R30
00005a bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005b e0f1      	LDI  R31,1
00005c bff5      	OUT  MCUCR,R31
00005d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005e e08d      	LDI  R24,(14-2)+1
00005f e0a2      	LDI  R26,2
000060 27bb      	CLR  R27
                 __CLEAR_REG:
000061 93ed      	ST   X+,R30
000062 958a      	DEC  R24
000063 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000064 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000065 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000066 e0a0      	LDI  R26,LOW(__SRAM_START)
000067 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000068 93ed      	ST   X+,R30
000069 9701      	SBIW R24,1
00006a f7e9      	BRNE __CLEAR_SRAM
                 
00006b bf8b      	OUT  RAMPZ,R24
                 
                 ;GPIOR0 INITIALIZATION
00006c e0e0      	LDI  R30,__GPIOR0_INIT
00006d bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006e efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006f bfed      	OUT  SPL,R30
000070 e2e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000071 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000072 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000073 e0d9      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000074 940c 0091 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x900
                 
                 	.CSEG
                 ;/*
                 ; * e03.c
                 ; *
                 ; * Created: 12-May-20 4:49:06 PM
                 ; * Author: javie
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;// Voltage Reference: AVCC pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0013 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0014 ADMUX=adc_input | ADC_VREF_TYPE;
000076 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000077 81e8      	LD   R30,Y
000078 64e0      	ORI  R30,0x40
000079 93e0 007c 	STS  124,R30
                 ; 0000 0015 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0016 delay_us(10);
                +
00007b e087     +LDI R24 , LOW ( 7 )
                +__DELAY_USB_LOOP :
00007c 958a     +DEC R24
00007d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 7
                 ; 0000 0017 // Start the AD conversion
                 ; 0000 0018 ADCSRA|=(1<<ADSC);
00007e 91e0 007a 	LDS  R30,122
000080 64e0      	ORI  R30,0x40
000081 93e0 007a 	STS  122,R30
                 ; 0000 0019 // Wait for the AD conversion to complete
                 ; 0000 001A while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000083 91e0 007a 	LDS  R30,122
000085 71e0      	ANDI R30,LOW(0x10)
000086 f3e1      	BREQ _0x3
                 ; 0000 001B ADCSRA|=(1<<ADIF);
000087 91e0 007a 	LDS  R30,122
000089 61e0      	ORI  R30,0x10
00008a 93e0 007a 	STS  122,R30
                 ; 0000 001C return ADCW;
00008c 91e0 0078 	LDS  R30,120
00008e 91f0 0079 	LDS  R31,120+1
000090 c032      	RJMP _0x2060001
                 ; 0000 001D }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0020 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0021 // USART1 initialization
                 ; 0000 0022 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0023 // USART1 Receiver: On
                 ; 0000 0024 // USART1 Transmitter: On
                 ; 0000 0025 // USART1 Mode: Asynchronous
                 ; 0000 0026 // USART1 Baud Rate: 9600
                 ; 0000 0027 UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
000091 e0e0      	LDI  R30,LOW(0)
000092 93e0 00c8 	STS  200,R30
                 ; 0000 0028 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (1<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
000094 e1e8      	LDI  R30,LOW(24)
000095 93e0 00c9 	STS  201,R30
                 ; 0000 0029 UCSR1C=(0<<UMSEL11) | (0<<UMSEL10) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
000097 e0e6      	LDI  R30,LOW(6)
000098 93e0 00ca 	STS  202,R30
                 ; 0000 002A UBRR1H=0x00;
00009a e0e0      	LDI  R30,LOW(0)
00009b 93e0 00cd 	STS  205,R30
                 ; 0000 002B UBRR1L=0x0C;
00009d e0ec      	LDI  R30,LOW(12)
00009e 93e0 00cc 	STS  204,R30
                 ; 0000 002C 
                 ; 0000 002D 
                 ; 0000 002E // ADC initialization
                 ; 0000 002F // ADC Clock frequency: 125.000 kHz
                 ; 0000 0030 // ADC Voltage Reference: AVCC pin
                 ; 0000 0031 // ADC High Speed Mode: Off
                 ; 0000 0032 // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0000 0033 // ADC4: On, ADC5: On, ADC6: On, ADC7: Off
                 ; 0000 0034 DIDR0=(1<<ADC7D) | (0<<ADC6D) | (0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
0000a0 e8e0      	LDI  R30,LOW(128)
0000a1 93e0 007e 	STS  126,R30
                 ; 0000 0035 ADMUX=ADC_VREF_TYPE;
0000a3 e4e0      	LDI  R30,LOW(64)
0000a4 93e0 007c 	STS  124,R30
                 ; 0000 0036 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000a6 e8e4      	LDI  R30,LOW(132)
0000a7 93e0 007a 	STS  122,R30
                 ; 0000 0037 ADCSRB=(1<<ADHSM);
0000a9 e8e0      	LDI  R30,LOW(128)
0000aa 93e0 007b 	STS  123,R30
                 ; 0000 0038 
                 ; 0000 0039 
                 ; 0000 003A while (1)
                 _0x6:
                 ; 0000 003B     {
                 ; 0000 003C     // Please write your application code here
                 ; 0000 003D         //printf("%d\n\r",255);         //read_adc(7)
                 ; 0000 003E         printf("%d\n\r",read_adc(7));
                +
0000ac eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000ad e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ae 93fa      	ST   -Y,R31
0000af 93ea      	ST   -Y,R30
0000b0 e0a7      	LDI  R26,LOW(7)
0000b1 dfc4      	RCALL _read_adc
0000b2 2766      	CLR  R22
0000b3 2777      	CLR  R23
0000b4 940e 0279 	CALL __PUTPARD1
0000b6 e084      	LDI  R24,4
0000b7 d14e      	RCALL _printf
0000b8 9626      	ADIW R28,6
                 ; 0000 003F     }
0000b9 cff2      	RJMP _0x6
                 ; 0000 0040 }
                 _0x9:
0000ba cfff      	RJMP _0x9
                 ; .FEND
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000bb 93aa      	ST   -Y,R26
                 _0x2000006:
0000bc 91e0 00c8 	LDS  R30,200
0000be 72e0      	ANDI R30,LOW(0x20)
0000bf f3e1      	BREQ _0x2000006
0000c0 81e8      	LD   R30,Y
0000c1 93e0 00ce 	STS  206,R30
                 _0x2060001:
0000c3 9621      	ADIW R28,1
0000c4 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000c5 93ba      	ST   -Y,R27
0000c6 93aa      	ST   -Y,R26
0000c7 81aa      	LDD  R26,Y+2
0000c8 dff2      	RCALL _putchar
0000c9 81a8      	LD   R26,Y
0000ca 81b9      	LDD  R27,Y+1
0000cb 91ed      	LD   R30,X+
0000cc 91fd      	LD   R31,X+
0000cd 9631      	ADIW R30,1
0000ce 93fe      	ST   -X,R31
0000cf 93ee      	ST   -X,R30
0000d0 9623      	ADIW R28,3
0000d1 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000d2 93ba      	ST   -Y,R27
0000d3 93aa      	ST   -Y,R26
0000d4 9726      	SBIW R28,6
0000d5 940e 027e 	CALL __SAVELOCR6
0000d7 e010      	LDI  R17,0
0000d8 85ac      	LDD  R26,Y+12
0000d9 85bd      	LDD  R27,Y+12+1
0000da e0e0      	LDI  R30,LOW(0)
0000db e0f0      	LDI  R31,HIGH(0)
0000dc 93ed      	ST   X+,R30
0000dd 93fc      	ST   X,R31
                 _0x200001C:
0000de 89ea      	LDD  R30,Y+18
0000df 89fb      	LDD  R31,Y+18+1
0000e0 9631      	ADIW R30,1
0000e1 8bea      	STD  Y+18,R30
0000e2 8bfb      	STD  Y+18+1,R31
0000e3 9731      	SBIW R30,1
0000e4 91e4      	LPM  R30,Z
0000e5 2f2e      	MOV  R18,R30
0000e6 30e0      	CPI  R30,0
0000e7 f409      	BRNE PC+2
0000e8 c115      	RJMP _0x200001E
0000e9 2fe1      	MOV  R30,R17
0000ea 30e0      	CPI  R30,0
0000eb f439      	BRNE _0x2000022
0000ec 3225      	CPI  R18,37
0000ed f411      	BRNE _0x2000023
0000ee e011      	LDI  R17,LOW(1)
0000ef c002      	RJMP _0x2000024
                 _0x2000023:
0000f0 940e 0244 	CALL SUBOPT_0x0
                 _0x2000024:
0000f2 c10a      	RJMP _0x2000021
                 _0x2000022:
0000f3 30e1      	CPI  R30,LOW(0x1)
0000f4 f4a9      	BRNE _0x2000025
0000f5 3225      	CPI  R18,37
0000f6 f419      	BRNE _0x2000026
0000f7 940e 0244 	CALL SUBOPT_0x0
0000f9 c102      	RJMP _0x20000D2
                 _0x2000026:
0000fa e012      	LDI  R17,LOW(2)
0000fb e040      	LDI  R20,LOW(0)
0000fc e000      	LDI  R16,LOW(0)
0000fd 322d      	CPI  R18,45
0000fe f411      	BRNE _0x2000027
0000ff e001      	LDI  R16,LOW(1)
000100 c0fc      	RJMP _0x2000021
                 _0x2000027:
000101 322b      	CPI  R18,43
000102 f411      	BRNE _0x2000028
000103 e24b      	LDI  R20,LOW(43)
000104 c0f8      	RJMP _0x2000021
                 _0x2000028:
000105 3220      	CPI  R18,32
000106 f411      	BRNE _0x2000029
000107 e240      	LDI  R20,LOW(32)
000108 c0f4      	RJMP _0x2000021
                 _0x2000029:
000109 c002      	RJMP _0x200002A
                 _0x2000025:
00010a 30e2      	CPI  R30,LOW(0x2)
00010b f439      	BRNE _0x200002B
                 _0x200002A:
00010c e050      	LDI  R21,LOW(0)
00010d e013      	LDI  R17,LOW(3)
00010e 3320      	CPI  R18,48
00010f f411      	BRNE _0x200002C
000110 6800      	ORI  R16,LOW(128)
000111 c0eb      	RJMP _0x2000021
                 _0x200002C:
000112 c003      	RJMP _0x200002D
                 _0x200002B:
000113 30e3      	CPI  R30,LOW(0x3)
000114 f009      	BREQ PC+2
000115 c0e7      	RJMP _0x2000021
                 _0x200002D:
000116 3320      	CPI  R18,48
000117 f010      	BRLO _0x2000030
000118 332a      	CPI  R18,58
000119 f008      	BRLO _0x2000031
                 _0x2000030:
00011a c007      	RJMP _0x200002F
                 _0x2000031:
00011b e0aa      	LDI  R26,LOW(10)
00011c 9f5a      	MUL  R21,R26
00011d 2d50      	MOV  R21,R0
00011e 2fe2      	MOV  R30,R18
00011f 53e0      	SUBI R30,LOW(48)
000120 0f5e      	ADD  R21,R30
000121 c0db      	RJMP _0x2000021
                 _0x200002F:
000122 2fe2      	MOV  R30,R18
000123 36e3      	CPI  R30,LOW(0x63)
000124 f449      	BRNE _0x2000035
000125 940e 024b 	CALL SUBOPT_0x1
000127 89e8      	LDD  R30,Y+16
000128 89f9      	LDD  R31,Y+16+1
000129 81a4      	LDD  R26,Z+4
00012a 93aa      	ST   -Y,R26
00012b 940e 0251 	CALL SUBOPT_0x2
00012d c0ce      	RJMP _0x2000036
                 _0x2000035:
00012e 37e3      	CPI  R30,LOW(0x73)
00012f f441      	BRNE _0x2000038
000130 940e 024b 	CALL SUBOPT_0x1
000132 940e 0257 	CALL SUBOPT_0x3
000134 940e 022b 	CALL _strlen
000136 2f1e      	MOV  R17,R30
000137 c00a      	RJMP _0x2000039
                 _0x2000038:
000138 37e0      	CPI  R30,LOW(0x70)
000139 f461      	BRNE _0x200003B
00013a 940e 024b 	CALL SUBOPT_0x1
00013c 940e 0257 	CALL SUBOPT_0x3
00013e 940e 0237 	CALL _strlenf
000140 2f1e      	MOV  R17,R30
000141 6008      	ORI  R16,LOW(8)
                 _0x2000039:
000142 6002      	ORI  R16,LOW(2)
000143 770f      	ANDI R16,LOW(127)
000144 e030      	LDI  R19,LOW(0)
000145 c034      	RJMP _0x200003C
                 _0x200003B:
000146 36e4      	CPI  R30,LOW(0x64)
000147 f011      	BREQ _0x200003F
000148 36e9      	CPI  R30,LOW(0x69)
000149 f411      	BRNE _0x2000040
                 _0x200003F:
00014a 6004      	ORI  R16,LOW(4)
00014b c002      	RJMP _0x2000041
                 _0x2000040:
00014c 37e5      	CPI  R30,LOW(0x75)
00014d f431      	BRNE _0x2000042
                 _0x2000041:
00014e e9e8      	LDI  R30,LOW(_tbl10_G100*2)
00014f e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000150 83ee      	STD  Y+6,R30
000151 83ff      	STD  Y+6+1,R31
000152 e015      	LDI  R17,LOW(5)
000153 c00c      	RJMP _0x2000043
                 _0x2000042:
000154 35e8      	CPI  R30,LOW(0x58)
000155 f411      	BRNE _0x2000045
000156 6008      	ORI  R16,LOW(8)
000157 c003      	RJMP _0x2000046
                 _0x2000045:
000158 37e8      	CPI  R30,LOW(0x78)
000159 f009      	BREQ PC+2
00015a c0a1      	RJMP _0x2000077
                 _0x2000046:
00015b eae2      	LDI  R30,LOW(_tbl16_G100*2)
00015c e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00015d 83ee      	STD  Y+6,R30
00015e 83ff      	STD  Y+6+1,R31
00015f e014      	LDI  R17,LOW(4)
                 _0x2000043:
000160 ff02      	SBRS R16,2
000161 c014      	RJMP _0x2000048
000162 940e 024b 	CALL SUBOPT_0x1
000164 940e 0261 	CALL SUBOPT_0x4
000166 85ab      	LDD  R26,Y+11
000167 23aa      	TST  R26
000168 f43a      	BRPL _0x2000049
000169 85ea      	LDD  R30,Y+10
00016a 85fb      	LDD  R31,Y+10+1
00016b 940e 026d 	CALL __ANEGW1
00016d 87ea      	STD  Y+10,R30
00016e 87fb      	STD  Y+10+1,R31
00016f e24d      	LDI  R20,LOW(45)
                 _0x2000049:
000170 3040      	CPI  R20,0
000171 f011      	BREQ _0x200004A
000172 5f1f      	SUBI R17,-LOW(1)
000173 c001      	RJMP _0x200004B
                 _0x200004A:
000174 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
000175 c004      	RJMP _0x200004C
                 _0x2000048:
000176 940e 024b 	CALL SUBOPT_0x1
000178 940e 0261 	CALL SUBOPT_0x4
                 _0x200004C:
                 _0x200003C:
00017a fd00      	SBRC R16,0
00017b c011      	RJMP _0x200004D
                 _0x200004E:
00017c 1715      	CP   R17,R21
00017d f478      	BRSH _0x2000050
00017e ff07      	SBRS R16,7
00017f c008      	RJMP _0x2000051
000180 ff02      	SBRS R16,2
000181 c004      	RJMP _0x2000052
000182 7f0b      	ANDI R16,LOW(251)
000183 2f24      	MOV  R18,R20
000184 5011      	SUBI R17,LOW(1)
000185 c001      	RJMP _0x2000053
                 _0x2000052:
000186 e320      	LDI  R18,LOW(48)
                 _0x2000053:
000187 c001      	RJMP _0x2000054
                 _0x2000051:
000188 e220      	LDI  R18,LOW(32)
                 _0x2000054:
000189 940e 0244 	CALL SUBOPT_0x0
00018b 5051      	SUBI R21,LOW(1)
00018c cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
00018d 2f31      	MOV  R19,R17
00018e ff01      	SBRS R16,1
00018f c017      	RJMP _0x2000055
                 _0x2000056:
000190 3030      	CPI  R19,0
000191 f0a1      	BREQ _0x2000058
000192 ff03      	SBRS R16,3
000193 c006      	RJMP _0x2000059
000194 81ee      	LDD  R30,Y+6
000195 81ff      	LDD  R31,Y+6+1
000196 9125      	LPM  R18,Z+
000197 83ee      	STD  Y+6,R30
000198 83ff      	STD  Y+6+1,R31
000199 c005      	RJMP _0x200005A
                 _0x2000059:
00019a 81ae      	LDD  R26,Y+6
00019b 81bf      	LDD  R27,Y+6+1
00019c 912d      	LD   R18,X+
00019d 83ae      	STD  Y+6,R26
00019e 83bf      	STD  Y+6+1,R27
                 _0x200005A:
00019f 940e 0244 	CALL SUBOPT_0x0
0001a1 3050      	CPI  R21,0
0001a2 f009      	BREQ _0x200005B
0001a3 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0001a4 5031      	SUBI R19,LOW(1)
0001a5 cfea      	RJMP _0x2000056
                 _0x2000058:
0001a6 c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001a7 e320      	LDI  R18,LOW(48)
0001a8 81ee      	LDD  R30,Y+6
0001a9 81ff      	LDD  R31,Y+6+1
0001aa 940e 0275 	CALL __GETW1PF
0001ac 87e8      	STD  Y+8,R30
0001ad 87f9      	STD  Y+8+1,R31
0001ae 81ee      	LDD  R30,Y+6
0001af 81ff      	LDD  R31,Y+6+1
0001b0 9632      	ADIW R30,2
0001b1 83ee      	STD  Y+6,R30
0001b2 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001b3 85e8      	LDD  R30,Y+8
0001b4 85f9      	LDD  R31,Y+8+1
0001b5 85aa      	LDD  R26,Y+10
0001b6 85bb      	LDD  R27,Y+10+1
0001b7 17ae      	CP   R26,R30
0001b8 07bf      	CPC  R27,R31
0001b9 f050      	BRLO _0x2000062
0001ba 5f2f      	SUBI R18,-LOW(1)
0001bb 85a8      	LDD  R26,Y+8
0001bc 85b9      	LDD  R27,Y+8+1
0001bd 85ea      	LDD  R30,Y+10
0001be 85fb      	LDD  R31,Y+10+1
0001bf 1bea      	SUB  R30,R26
0001c0 0bfb      	SBC  R31,R27
0001c1 87ea      	STD  Y+10,R30
0001c2 87fb      	STD  Y+10+1,R31
0001c3 cfef      	RJMP _0x2000060
                 _0x2000062:
0001c4 332a      	CPI  R18,58
0001c5 f028      	BRLO _0x2000063
0001c6 ff03      	SBRS R16,3
0001c7 c002      	RJMP _0x2000064
0001c8 5f29      	SUBI R18,-LOW(7)
0001c9 c001      	RJMP _0x2000065
                 _0x2000064:
0001ca 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001cb fd04      	SBRC R16,4
0001cc c01a      	RJMP _0x2000067
0001cd 3321      	CPI  R18,49
0001ce f420      	BRSH _0x2000069
0001cf 85a8      	LDD  R26,Y+8
0001d0 85b9      	LDD  R27,Y+8+1
0001d1 9711      	SBIW R26,1
0001d2 f409      	BRNE _0x2000068
                 _0x2000069:
0001d3 c009      	RJMP _0x20000D3
                 _0x2000068:
0001d4 1753      	CP   R21,R19
0001d5 f010      	BRLO _0x200006D
0001d6 ff00      	SBRS R16,0
0001d7 c001      	RJMP _0x200006E
                 _0x200006D:
0001d8 c013      	RJMP _0x200006C
                 _0x200006E:
0001d9 e220      	LDI  R18,LOW(32)
0001da ff07      	SBRS R16,7
0001db c00b      	RJMP _0x200006F
0001dc e320      	LDI  R18,LOW(48)
                 _0x20000D3:
0001dd 6100      	ORI  R16,LOW(16)
0001de ff02      	SBRS R16,2
0001df c007      	RJMP _0x2000070
0001e0 7f0b      	ANDI R16,LOW(251)
0001e1 934a      	ST   -Y,R20
0001e2 940e 0251 	CALL SUBOPT_0x2
0001e4 3050      	CPI  R21,0
0001e5 f009      	BREQ _0x2000071
0001e6 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0001e7 940e 0244 	CALL SUBOPT_0x0
0001e9 3050      	CPI  R21,0
0001ea f009      	BREQ _0x2000072
0001eb 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
0001ec 5031      	SUBI R19,LOW(1)
0001ed 85a8      	LDD  R26,Y+8
0001ee 85b9      	LDD  R27,Y+8+1
0001ef 9712      	SBIW R26,2
0001f0 f008      	BRLO _0x200005F
0001f1 cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0001f2 ff00      	SBRS R16,0
0001f3 c008      	RJMP _0x2000073
                 _0x2000074:
0001f4 3050      	CPI  R21,0
0001f5 f031      	BREQ _0x2000076
0001f6 5051      	SUBI R21,LOW(1)
0001f7 e2e0      	LDI  R30,LOW(32)
0001f8 93ea      	ST   -Y,R30
0001f9 940e 0251 	CALL SUBOPT_0x2
0001fb cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0001fc e010      	LDI  R17,LOW(0)
                 _0x2000021:
0001fd cee0      	RJMP _0x200001C
                 _0x200001E:
0001fe 85ac      	LDD  R26,Y+12
0001ff 85bd      	LDD  R27,Y+12+1
000200 940e 0271 	CALL __GETW1P
000202 940e 0285 	CALL __LOADLOCR6
000204 9664      	ADIW R28,20
000205 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000206 92ff      	PUSH R15
000207 2ef8      	MOV  R15,R24
000208 9726      	SBIW R28,6
000209 931a      	ST   -Y,R17
00020a 930a      	ST   -Y,R16
00020b 01de      	MOVW R26,R28
00020c 9614      	ADIW R26,4
00020d 940e 0269 	CALL __ADDW2R15
00020f 018d      	MOVW R16,R26
000210 e0e0      	LDI  R30,LOW(0)
000211 83ec      	STD  Y+4,R30
000212 83ed      	STD  Y+4+1,R30
000213 83ee      	STD  Y+6,R30
000214 83ef      	STD  Y+6+1,R30
000215 01de      	MOVW R26,R28
000216 9618      	ADIW R26,8
000217 940e 0269 	CALL __ADDW2R15
000219 940e 0271 	CALL __GETW1P
00021b 93fa      	ST   -Y,R31
00021c 93ea      	ST   -Y,R30
00021d 931a      	ST   -Y,R17
00021e 930a      	ST   -Y,R16
00021f ece5      	LDI  R30,LOW(_put_usart_G100)
000220 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000221 93fa      	ST   -Y,R31
000222 93ea      	ST   -Y,R30
000223 01de      	MOVW R26,R28
000224 9618      	ADIW R26,8
000225 deac      	RCALL __print_G100
000226 8119      	LDD  R17,Y+1
000227 8108      	LDD  R16,Y+0
000228 9628      	ADIW R28,8
000229 90ff      	POP  R15
00022a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00022b 93ba      	ST   -Y,R27
00022c 93aa      	ST   -Y,R26
00022d 91a9          ld   r26,y+
00022e 91b9          ld   r27,y+
00022f 27ee          clr  r30
000230 27ff          clr  r31
                 strlen0:
000231 916d          ld   r22,x+
000232 2366          tst  r22
000233 f011          breq strlen1
000234 9631          adiw r30,1
000235 cffb          rjmp strlen0
                 strlen1:
000236 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000237 93ba      	ST   -Y,R27
000238 93aa      	ST   -Y,R26
000239 27aa          clr  r26
00023a 27bb          clr  r27
00023b 91e9          ld   r30,y+
00023c 91f9          ld   r31,y+
                 strlenf0:
00023d 9005      	lpm  r0,z+
00023e 2000          tst  r0
00023f f011          breq strlenf1
000240 9611          adiw r26,1
000241 cffb          rjmp strlenf0
                 strlenf1:
000242 01fd          movw r30,r26
000243 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000244 932a      	ST   -Y,R18
000245 85ad      	LDD  R26,Y+13
000246 85be      	LDD  R27,Y+13+1
000247 85ef      	LDD  R30,Y+15
000248 89f8      	LDD  R31,Y+15+1
000249 9509      	ICALL
00024a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
00024b 89e8      	LDD  R30,Y+16
00024c 89f9      	LDD  R31,Y+16+1
00024d 9734      	SBIW R30,4
00024e 8be8      	STD  Y+16,R30
00024f 8bf9      	STD  Y+16+1,R31
000250 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000251 85ad      	LDD  R26,Y+13
000252 85be      	LDD  R27,Y+13+1
000253 85ef      	LDD  R30,Y+15
000254 89f8      	LDD  R31,Y+15+1
000255 9509      	ICALL
000256 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000257 89a8      	LDD  R26,Y+16
000258 89b9      	LDD  R27,Y+16+1
000259 9614      	ADIW R26,4
00025a 940e 0271 	CALL __GETW1P
00025c 83ee      	STD  Y+6,R30
00025d 83ff      	STD  Y+6+1,R31
00025e 81ae      	LDD  R26,Y+6
00025f 81bf      	LDD  R27,Y+6+1
000260 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000261 89a8      	LDD  R26,Y+16
000262 89b9      	LDD  R27,Y+16+1
000263 9614      	ADIW R26,4
000264 940e 0271 	CALL __GETW1P
000266 87ea      	STD  Y+10,R30
000267 87fb      	STD  Y+10+1,R31
000268 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
000269 2400      	CLR  R0
00026a 0daf      	ADD  R26,R15
00026b 1db0      	ADC  R27,R0
00026c 9508      	RET
                 
                 __ANEGW1:
00026d 95f1      	NEG  R31
00026e 95e1      	NEG  R30
00026f 40f0      	SBCI R31,0
000270 9508      	RET
                 
                 __GETW1P:
000271 91ed      	LD   R30,X+
000272 91fc      	LD   R31,X
000273 9711      	SBIW R26,1
000274 9508      	RET
                 
                 __GETW1PF:
000275 9005      	LPM  R0,Z+
000276 91f4      	LPM  R31,Z
000277 2de0      	MOV  R30,R0
000278 9508      	RET
                 
                 __PUTPARD1:
000279 937a      	ST   -Y,R23
00027a 936a      	ST   -Y,R22
00027b 93fa      	ST   -Y,R31
00027c 93ea      	ST   -Y,R30
00027d 9508      	RET
                 
                 __SAVELOCR6:
00027e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00027f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000280 933a      	ST   -Y,R19
                 __SAVELOCR3:
000281 932a      	ST   -Y,R18
                 __SAVELOCR2:
000282 931a      	ST   -Y,R17
000283 930a      	ST   -Y,R16
000284 9508      	RET
                 
                 __LOADLOCR6:
000285 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000286 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000287 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000288 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000289 8119      	LDD  R17,Y+1
00028a 8108      	LD   R16,Y
00028b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

AT90USB1286 register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  30 r17:  19 r18:  27 r19:   8 r20:   9 r21:  17 r22:   4 r23:   2 
r24:   9 r25:   1 r26:  49 r27:  25 r28:  11 r29:   1 r30: 122 r31:  45 
x  :  12 y  : 126 z  :   6 
Registers used: 21 out of 35 (60.0%)

AT90USB1286 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  15 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  13 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  20 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  30 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  29 cpse  :   0 dec   :   2 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   0 inc   :   0 jmp   :  39 ld    :  14 ldd   :  57 
ldi   :  57 lds   :   6 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 
movw  :   5 mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   0 ori   :   9 out   :   7 pop   :   1 push  :   1 rcall :   4 
ret   :  18 reti  :   0 rjmp  :  52 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   1 sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   8 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  40 std   :  28 sts   :  13 sub   :   1 subi  :  13 
swap  :   0 tst   :   3 wdr   :   0 
Instructions used: 45 out of 117 (38.5%)

AT90USB1286 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000518   1280     24   1304  131072   1.0%
[.dseg] 0x000100 0x000900      0      0      0    8192   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 1 warnings

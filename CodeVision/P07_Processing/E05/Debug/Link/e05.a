;/*
; * e01.c
; *
; * Created: 12-May-20 4:49:06 PM
; * Author: javie
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#define DIN PORTC.0
;#define LOAD PORTC.1
;#define CLK PORTC.2
;
;void MandaMax7219 (unsigned int dato)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011     unsigned char i;        //Contador para 16b
; 0000 0012     CLK=0;                  //Valores de inicializacion
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	dato -> Y+1
;	i -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0013     LOAD=0;                 //Valores de inicializacion
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0014     for (i=0;i<16;i++)
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0015     {
; 0000 0016         if ((dato&0x8000)==0)
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0017             DIN=0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0018         else
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0019             DIN=1;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001A         CLK=1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 001B         CLK=0;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 001C         dato=dato<<1;         //El siguiente bit pasa a ser el mas significativo
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001D     }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001E     LOAD=1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 001F     LOAD=0;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0020 }
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;
;void ConfiguraMax(void)
; 0000 0023 {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0024     DDRC=0x07;              //Salidas en PC0,PC1,PC2
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0025     MandaMax7219(0x0900);    //Mando a 0x09 un 0x00 (Decode Mode)
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0026     MandaMax7219(0x0A08);    //Mando a 0x0A un 0x08 (Decode Mode)
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0027     MandaMax7219(0x0B07);    //Mando a 0x0B un 0x07 (Decode Mode)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0028     MandaMax7219(0x0C01);    //Mando a 0x01 un 0x01 (Decode Mode)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0029     MandaMax7219(0x0F00);    //Mando a 0x0F un 0x00 (Decode Mode)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 002A }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;
;char value, i;
;void main(void)
; 0000 002E {
;PCODE: $0000004D VOL: 0
; 0000 002F 
; 0000 0030 DDRB.7=1;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0031 // USART1 initialization
; 0000 0032 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0033 // USART1 Receiver: On
; 0000 0034 // USART1 Transmitter: On
; 0000 0035 // USART1 Mode: Asynchronous
; 0000 0036 // USART1 Baud Rate: 9600
; 0000 0037 UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0038 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (1<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0039 UCSR1C=(0<<UMSEL11) | (0<<UMSEL10) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 003A UBRR1H=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003B UBRR1L=0x0C;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003C 
; 0000 003D ConfiguraMax();
;PCODE: $0000005A VOL: 0
; 0000 003E 
; 0000 003F i=8;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0040 
; 0000 0041 while (1)
;PCODE: $0000005D VOL: 0
; 0000 0042     {
; 0000 0043     // Please write your application code here
; 0000 0044         value=getchar();
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0045         MandaMax7219(i<<8|value); //recorre i 8 bits y se utiliza OR para agregar value a la cadena de bits
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0046         i--;
;PCODE: $00000069 VOL: 0
; 0000 0047 
; 0000 0048         if(i<1)
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0049             i=8;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 004A     }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 004B }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;

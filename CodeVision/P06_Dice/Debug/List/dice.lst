
AVRASM ver. 2.1.30  D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P06_Dice\Debug\List\dice.asm Tue May 05 16:47:32 2020

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : AT90USB1286
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME AT90USB1286
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR1A=0xC8
                 	.EQU UDR1=0xCE
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x20FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 04b2 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0659 	JMP  _timer3_ovf_isr
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
                 
                 _Dice:
00004c 0000
00004d 1800
00004e 0018
00004f 0000      	.DB  0x0,0x0,0x0,0x18,0x18,0x0,0x0,0x0
000050 c0c0
000051 0000
000052 0000
000053 0303      	.DB  0xC0,0xC0,0x0,0x0,0x0,0x0,0x3,0x3
000054 c0c0
000055 1800
000056 0018
000057 0303      	.DB  0xC0,0xC0,0x0,0x18,0x18,0x0,0x3,0x3
000058 c3c3
000059 0000
00005a 0000
00005b c3c3      	.DB  0xC3,0xC3,0x0,0x0,0x0,0x0,0xC3,0xC3
00005c c3c3
00005d 1800
00005e 0018
00005f c3c3      	.DB  0xC3,0xC3,0x0,0x18,0x18,0x0,0xC3,0xC3
000060 dbdb
000061 0000
000062 0000
000063 dbdb      	.DB  0xDB,0xDB,0x0,0x0,0x0,0x0,0xDB,0xDB
                 _SmallDice:
000064 0200
000065 0400
000066 0100
000067 0204      	.DB  0x0,0x2,0x0,0x4,0x0,0x1,0x4,0x2
000068 0501
000069 0500
00006a 0205
00006b 0705      	.DB  0x1,0x5,0x0,0x5,0x5,0x2,0x5,0x7
00006c 0700      	.DB  0x0,0x7
                 _Letras:
00006d 0000
00006e 0000
00006f 0000
000070 f200      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xF2
000071 0000
000072 e000
000073 e000
000074 2800      	.DB  0x0,0x0,0x0,0xE0,0x0,0xE0,0x0,0x28
000075 28fe
000076 28fe
000077 5424
000078 54fe      	.DB  0xFE,0x28,0xFE,0x28,0x24,0x54,0xFE,0x54
000079 c448
00007a 10c8
00007b 4626
00007c 926c      	.DB  0x48,0xC4,0xC8,0x10,0x26,0x46,0x6C,0x92
00007d 84aa
00007e 000a
00007f c0a0
000080 0000      	.DB  0xAA,0x84,0xA,0x0,0xA0,0xC0,0x0,0x0
000081 3800
000082 8244
000083 0000
000084 4482      	.DB  0x0,0x38,0x44,0x82,0x0,0x0,0x82,0x44
000085 0038
000086 1028
000087 107c
000088 1028      	.DB  0x38,0x0,0x28,0x10,0x7C,0x10,0x28,0x10
000089 7c10
00008a 1010
00008b 0500
00008c 0006      	.DB  0x10,0x7C,0x10,0x10,0x0,0x5,0x6,0x0
00008d 1000
00008e 1010
00008f 1010
000090 0600      	.DB  0x0,0x10,0x10,0x10,0x10,0x10,0x0,0x6
000091 0006
000092 0400
000093 1008
000094 4020      	.DB  0x6,0x0,0x0,0x4,0x8,0x10,0x20,0x40
000095 8a7c
000096 a292
000097 007c
000098 fe42      	.DB  0x7C,0x8A,0x92,0xA2,0x7C,0x0,0x42,0xFE
000099 0002
00009a 8642
00009b 928a
00009c 8462      	.DB  0x2,0x0,0x42,0x86,0x8A,0x92,0x62,0x84
00009d a282
00009e 9ce2
00009f 2818
0000a0 fe48      	.DB  0x82,0xA2,0xE2,0x9C,0x18,0x28,0x48,0xFE
0000a1 e408
0000a2 a2a2
0000a3 9ca2
0000a4 523c      	.DB  0x8,0xE4,0xA2,0xA2,0xA2,0x9C,0x3C,0x52
0000a5 9292
0000a6 800c
0000a7 908e
0000a8 c0a0      	.DB  0x92,0x92,0xC,0x80,0x8E,0x90,0xA0,0xC0
0000a9 926c
0000aa 9292
0000ab 606c
0000ac 9292      	.DB  0x6C,0x92,0x92,0x92,0x6C,0x60,0x92,0x92
0000ad 7894
0000ae 3600
0000af 0036
0000b0 0000      	.DB  0x94,0x78,0x0,0x36,0x36,0x0,0x0,0x0
0000b1 3635
0000b2 0000
0000b3 2810
0000b4 8244      	.DB  0x35,0x36,0x0,0x0,0x10,0x28,0x44,0x82
0000b5 2800
0000b6 2828
0000b7 2828
0000b8 8200      	.DB  0x0,0x28,0x28,0x28,0x28,0x28,0x0,0x82
0000b9 2844
0000ba 4010
0000bb 8a80
0000bc 6090      	.DB  0x44,0x28,0x10,0x40,0x80,0x8A,0x90,0x60
0000bd 924c
0000be 829e
0000bf 7e7c
0000c0 9090      	.DB  0x4C,0x92,0x9E,0x82,0x7C,0x7E,0x90,0x90
0000c1 7e90
0000c2 92fe
0000c3 9292
0000c4 7c6c      	.DB  0x90,0x7E,0xFE,0x92,0x92,0x92,0x6C,0x7C
0000c5 8282
0000c6 4482
0000c7 82fe
0000c8 8282      	.DB  0x82,0x82,0x82,0x44,0xFE,0x82,0x82,0x82
0000c9 fe7c
0000ca 9292
0000cb 9292
0000cc 90fe      	.DB  0x7C,0xFE,0x92,0x92,0x92,0x92,0xFE,0x90
0000cd 9090
0000ce 7c90
0000cf 9282
0000d0 5c92      	.DB  0x90,0x90,0x90,0x7C,0x82,0x92,0x92,0x5C
0000d1 10fe
0000d2 1010
0000d3 00fe
0000d4 fe82      	.DB  0xFE,0x10,0x10,0x10,0xFE,0x0,0x82,0xFE
0000d5 0082
0000d6 8284
0000d7 8282
0000d8 fefc      	.DB  0x82,0x0,0x84,0x82,0x82,0x82,0xFC,0xFE
0000d9 2810
0000da 8244
0000db 02fe
0000dc 0202      	.DB  0x10,0x28,0x44,0x82,0xFE,0x2,0x2,0x2
0000dd fe02
0000de 2040
0000df fe40
0000e0 40fe      	.DB  0x2,0xFE,0x40,0x20,0x40,0xFE,0xFE,0x40
0000e1 1020
0000e2 7cfe
0000e3 8282
0000e4 7c82      	.DB  0x20,0x10,0xFE,0x7C,0x82,0x82,0x82,0x7C
0000e5 90fe
0000e6 9090
0000e7 7c60
0000e8 8682      	.DB  0xFE,0x90,0x90,0x90,0x60,0x7C,0x82,0x86
0000e9 7d82
0000ea 90fe
0000eb 9498
0000ec 6462      	.DB  0x82,0x7D,0xFE,0x90,0x98,0x94,0x62,0x64
0000ed 9292
0000ee 4c92
0000ef 8080
0000f0 80fe      	.DB  0x92,0x92,0x92,0x4C,0x80,0x80,0xFE,0x80
0000f1 fc80
0000f2 0202
0000f3 fc02
0000f4 04f8      	.DB  0x80,0xFC,0x2,0x2,0x2,0xFC,0xF8,0x4
0000f5 0402
0000f6 fef8
0000f7 0804
0000f8 fe04      	.DB  0x2,0x4,0xF8,0xFE,0x4,0x8,0x4,0xFE
0000f9 28c6
0000fa 2810
0000fb c0c6
0000fc 1e20      	.DB  0xC6,0x28,0x10,0x28,0xC6,0xC0,0x20,0x1E
0000fd c020
0000fe 8a86
0000ff a292
000100 00c2      	.DB  0x20,0xC0,0x86,0x8A,0x92,0xA2,0xC2,0x0
000101 82fe
000102 0082
000103 2040
000104 0810      	.DB  0xFE,0x82,0x82,0x0,0x40,0x20,0x10,0x8
000105 0004
000106 8282
000107 00fe
000108 4020      	.DB  0x4,0x0,0x82,0x82,0xFE,0x0,0x20,0x40
000109 4080
00010a 0220
00010b 0202
00010c 0202      	.DB  0x80,0x40,0x20,0x2,0x2,0x2,0x2,0x2
00010d 8000
00010e 2040
00010f 0400
000110 2a2a      	.DB  0x0,0x80,0x40,0x20,0x0,0x4,0x2A,0x2A
000111 1e2a
000112 12fe
000113 2222
000114 1c1c      	.DB  0x2A,0x1E,0xFE,0x12,0x22,0x22,0x1C,0x1C
000115 2222
000116 2222
000117 221c
000118 1222      	.DB  0x22,0x22,0x22,0x22,0x1C,0x22,0x22,0x12
000119 1cfe
00011a 2a2a
00011b 182a
00011c 7e10      	.DB  0xFE,0x1C,0x2A,0x2A,0x2A,0x18,0x10,0x7E
00011d 8090
00011e 1840
00011f 2525
000120 3e25      	.DB  0x90,0x80,0x40,0x18,0x25,0x25,0x25,0x3E
000121 10fe
000122 2020
000123 001e
000124 be22      	.DB  0xFE,0x10,0x20,0x20,0x1E,0x0,0x22,0xBE
000125 0002
000126 0204
000127 bc22
000128 fe00      	.DB  0x2,0x0,0x4,0x2,0x22,0xBC,0x0,0xFE
000129 1408
00012a 0022
00012b 8200
00012c 02fe      	.DB  0x8,0x14,0x22,0x0,0x0,0x82,0xFE,0x2
00012d 3e00
00012e 1820
00012f 1e20
000130 103e      	.DB  0x0,0x3E,0x20,0x18,0x20,0x1E,0x3E,0x10
000131 2020
000132 1c1e
000133 2222
000134 1c22      	.DB  0x20,0x20,0x1E,0x1C,0x22,0x22,0x22,0x1C
000135 243f
000136 2424
000137 1818
000138 2424      	.DB  0x3F,0x24,0x24,0x24,0x18,0x18,0x24,0x24
000139 3f24
00013a 103e
00013b 2020
00013c 1210      	.DB  0x24,0x3F,0x3E,0x10,0x20,0x20,0x10,0x12
00013d 2a2a
00013e 042a
00013f fe20
000140 0222      	.DB  0x2A,0x2A,0x2A,0x4,0x20,0xFE,0x22,0x2
000141 3c04
000142 0202
000143 3e04
000144 0438      	.DB  0x4,0x3C,0x2,0x2,0x4,0x3E,0x38,0x4
000145 0402
000146 3c38
000147 0c02
000148 3c02      	.DB  0x2,0x4,0x38,0x3C,0x2,0xC,0x2,0x3C
000149 1422
00014a 1408
00014b 3022
00014c 0a0a      	.DB  0x22,0x14,0x8,0x14,0x22,0x30,0xA,0xA
00014d 3c0a
00014e 2622
00014f 322a
000150 0022      	.DB  0xA,0x3C,0x22,0x26,0x2A,0x32,0x22,0x0
000151 6c10
000152 0082
000153 0000
000154 00fe      	.DB  0x10,0x6C,0x82,0x0,0x0,0x0,0xFE,0x0
000155 0000
000156 6c82
000157 0010
000158 2010      	.DB  0x0,0x0,0x82,0x6C,0x10,0x0,0x10,0x20
000159 0810
00015a 0010
00015b 0000
00015c 0000      	.DB  0x10,0x8,0x10,0x0,0x0,0x0,0x0,0x0
00015d aa04
00015e aa2a
00015f 1c1e
000160 22a2      	.DB  0x4,0xAA,0x2A,0xAA,0x1E,0x1C,0xA2,0x22
000161 1ca2
000162 421c
000163 4202
000164 3e1c      	.DB  0xA2,0x1C,0x1C,0x42,0x2,0x42,0x1C,0x3E
000165 50d0
000166 3ed0
000167 c23c
000168 c242      	.DB  0xD0,0x50,0xD0,0x3E,0x3C,0xC2,0x42,0xC2
000169 3c3c
00016a 0282
00016b 3c82
00016c 907f      	.DB  0x3C,0x3C,0x82,0x2,0x82,0x3C,0x7F,0x90
00016d 9292
00016e 006c
00016f 0000
000170 0000      	.DB  0x92,0x92,0x6C,0x0,0x0,0x0,0x0,0x0
000171 0000
000172 0000
000173 0000
000174 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000175 0000
000176 0000
000177 0000
000178 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000179 0000
00017a 0000
00017b 0000
00017c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017d 0000
00017e 0000
00017f 0000
000180 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000181 0000
000182 0000
000183 0000
000184 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000185 0000
000186 0000
000187 0000
000188 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000189 0000
00018a 0000
00018b 0000
00018c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00018d 0000
00018e 0000
00018f 0000
000190 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000191 0000
000192 0000
000193 0000
000194 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000195 0000
000196 0000
000197 0000
000198 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000199 0000
00019a 0000
00019b 0000
00019c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019d 0000
00019e 0000
00019f 0000
0001a0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a1 0000
0001a2 0000
0001a3 0000
0001a4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a5 0000
0001a6 0000
0001a7 0000
0001a8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a9 0000
0001aa 0000
0001ab 0000
0001ac 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ad 0000
0001ae 0000
0001af 0000
0001b0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b1 0000
0001b2 0000
0001b3 0000
0001b4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b5 0000
0001b6 0000
0001b7 0000
0001b8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P06_Dice\Debug\List\dice.asm(1234): warning: .cseg .db misalignment - padding zero byte
0001b9 0000      	.DB  0x0
                 _Animacion:
0001ba 0810
0001bb 0310
0001bc 1003
0001bd 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
0001be 0810
0001bf 0210
0001c0 1002
0001c1 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
0001c2 0810
0001c3 0310
0001c4 1003
0001c5 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
0001c6 0810
0001c7 0210
0001c8 1002
0001c9 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
0001ca 0810
0001cb 0310
0001cc 1003
0001cd 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
0001ce 0810
0001cf 0210
0001d0 1002
0001d1 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
0001d2 0810
0001d3 0310
0001d4 1003
0001d5 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
0001d6 0810
0001d7 0210
0001d8 1002
0001d9 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
0001da 1818
0001db 0200
0001dc 0002
0001dd 1818      	.DB  0x18,0x18,0x0,0x2,0x2,0x0,0x18,0x18
0001de 1008
0001df 0208
0001e0 0802
0001e1 0810      	.DB  0x8,0x10,0x8,0x2,0x2,0x8,0x10,0x8
0001e2 1818
0001e3 0200
0001e4 0002
0001e5 1818      	.DB  0x18,0x18,0x0,0x2,0x2,0x0,0x18,0x18
0001e6 1008
0001e7 0208
0001e8 0802
0001e9 0810      	.DB  0x8,0x10,0x8,0x2,0x2,0x8,0x10,0x8
0001ea 1818
0001eb 0200
0001ec 0002
0001ed 1818      	.DB  0x18,0x18,0x0,0x2,0x2,0x0,0x18,0x18
0001ee 1008
0001ef 0208
0001f0 0802
0001f1 0810      	.DB  0x8,0x10,0x8,0x2,0x2,0x8,0x10,0x8
0001f2 1008
0001f3 030a
0001f4 0a03
0001f5 0810      	.DB  0x8,0x10,0xA,0x3,0x3,0xA,0x10,0x8
0001f6 1008
0001f7 0208
0001f8 0802
0001f9 0810      	.DB  0x8,0x10,0x8,0x2,0x2,0x8,0x10,0x8
0001fa 1008
0001fb 030a
0001fc 0a03
0001fd 0810      	.DB  0x8,0x10,0xA,0x3,0x3,0xA,0x10,0x8
0001fe 1008
0001ff 0208
000200 0802
000201 0810      	.DB  0x8,0x10,0x8,0x2,0x2,0x8,0x10,0x8
000202 1008
000203 030a
000204 0a03
000205 0810      	.DB  0x8,0x10,0xA,0x3,0x3,0xA,0x10,0x8
000206 fe00
000207 1010
000208 fe10
000209 0000      	.DB  0x0,0xFE,0x10,0x10,0x10,0xFE,0x0,0x0
00020a 0000
00020b be22
00020c 0002
00020d 0000      	.DB  0x0,0x0,0x22,0xBE,0x2,0x0,0x0,0x0
00020e 0000
00020f f200
000210 0000
000211 0000      	.DB  0x0,0x0,0x0,0xF2,0x0,0x0,0x0,0x0
000212 0808
000213 0211
000214 1102
000215 0808      	.DB  0x8,0x8,0x11,0x2,0x2,0x11,0x8,0x8
000216 0808
000217 0310
000218 1003
000219 0808      	.DB  0x8,0x8,0x10,0x3,0x3,0x10,0x8,0x8
00021a 0808
00021b 0211
00021c 1102
00021d 0808      	.DB  0x8,0x8,0x11,0x2,0x2,0x11,0x8,0x8
00021e 0808
00021f 0310
000220 1003
000221 0808      	.DB  0x8,0x8,0x10,0x3,0x3,0x10,0x8,0x8
000222 fe00
000223 9292
000224 6c92
000225 0000      	.DB  0x0,0xFE,0x92,0x92,0x92,0x6C,0x0,0x0
000226 3000
000227 0a0a
000228 3c0a
000229 0000      	.DB  0x0,0x30,0xA,0xA,0xA,0x3C,0x0,0x0
00022a 1c00
00022b 2a2a
00022c 182a
00022d 0000      	.DB  0x0,0x1C,0x2A,0x2A,0x2A,0x18,0x0,0x0
00022e 0000
00022f f200
000230 0000
000231 0000      	.DB  0x0,0x0,0x0,0xF2,0x0,0x0,0x0,0x0
000232 0810
000233 0310
000234 1003
000235 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
000236 0810
000237 0210
000238 1002
000239 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
00023a 0810
00023b 0310
00023c 1003
00023d 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
00023e 0810
00023f 0210
000240 1002
000241 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
000242 0810
000243 0310
000244 1003
000245 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
000246 0810
000247 0210
000248 1002
000249 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
00024a 0810
00024b 0310
00024c 1003
00024d 1008      	.DB  0x10,0x8,0x10,0x3,0x3,0x10,0x8,0x10
00024e 0810
00024f 0210
000250 1002
000251 1008      	.DB  0x10,0x8,0x10,0x2,0x2,0x10,0x8,0x10
                 _MarioBros:
000252 0294
000253 0294
000254 0001
000255 0294      	.DB  0x94,0x2,0x94,0x2,0x1,0x0,0x94,0x2
000256 0001
000257 020c
000258 0294
000259 0001      	.DB  0x1,0x0,0xC,0x2,0x94,0x2,0x1,0x0
00025a 030e
00025b 0001
00025c 0001
00025d 0001      	.DB  0xE,0x3,0x1,0x0,0x1,0x0,0x1,0x0
00025e 0187
00025f 0001
000260 0001
000261 0001      	.DB  0x87,0x1,0x1,0x0,0x1,0x0,0x1,0x0
000262 020c
000263 0001
000264 0001
000265 0187      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x87,0x1
000266 0001
000267 0001
000268 014a
000269 0001      	.DB  0x1,0x0,0x1,0x0,0x4A,0x1,0x1,0x0
00026a 0001
00026b 01b8
00026c 0001
00026d 01ee      	.DB  0x1,0x0,0xB8,0x1,0x1,0x0,0xEE,0x1
00026e 0001
00026f 01d3
000270 01b8
000271 0001      	.DB  0x1,0x0,0xD3,0x1,0xB8,0x1,0x1,0x0
000272 0187
000273 0294
000274 0001
000275 030e      	.DB  0x87,0x1,0x94,0x2,0x1,0x0,0xE,0x3
000276 0370
000277 0001
000278 02ba
000279 030e      	.DB  0x70,0x3,0x1,0x0,0xBA,0x2,0xE,0x3
00027a 0001
00027b 0294
00027c 0001
00027d 020c      	.DB  0x1,0x0,0x94,0x2,0x1,0x0,0xC,0x2
00027e 024c
00027f 01ee
000280 0001
000281 0001      	.DB  0x4C,0x2,0xEE,0x1,0x1,0x0,0x1,0x0
000282 020c
000283 0001
000284 0001
000285 0187      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x87,0x1
000286 0001
000287 0001
000288 014a
000289 0001      	.DB  0x1,0x0,0x1,0x0,0x4A,0x1,0x1,0x0
00028a 0001
00028b 01b8
00028c 0001
00028d 01ee      	.DB  0x1,0x0,0xB8,0x1,0x1,0x0,0xEE,0x1
00028e 0001
00028f 01d3
000290 01b8
000291 0001      	.DB  0x1,0x0,0xD3,0x1,0xB8,0x1,0x1,0x0
000292 0187
000293 0294
000294 0001
000295 030e      	.DB  0x87,0x1,0x94,0x2,0x1,0x0,0xE,0x3
000296 0370
000297 0001
000298 02ba
000299 030e      	.DB  0x70,0x3,0x1,0x0,0xBA,0x2,0xE,0x3
00029a 0001
00029b 0294
00029c 0001
00029d 020c      	.DB  0x1,0x0,0x94,0x2,0x1,0x0,0xC,0x2
00029e 024c
00029f 01ee
0002a0 0001
0002a1 0001      	.DB  0x4C,0x2,0xEE,0x1,0x1,0x0,0x1,0x0
0002a2 0001
0002a3 0001
0002a4 030e
0002a5 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0002a6 02ba
0002a7 0270
0002a8 0001
0002a9 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0002aa 0001
0002ab 01a0
0002ac 01b8
0002ad 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
0002ae 0001
0002af 01b8
0002b0 020c
0002b1 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
0002b2 0001
0002b3 0001
0002b4 030e
0002b5 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0002b6 02ba
0002b7 0270
0002b8 0001
0002b9 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0002ba 0001
0002bb 0418
0002bc 0001
0002bd 0418      	.DB  0x1,0x0,0x18,0x4,0x1,0x0,0x18,0x4
0002be 0418
0002bf 0001
0002c0 0001
0002c1 0001      	.DB  0x18,0x4,0x1,0x0,0x1,0x0,0x1,0x0
0002c2 0001
0002c3 0001
0002c4 030e
0002c5 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0002c6 02ba
0002c7 0270
0002c8 0001
0002c9 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0002ca 0001
0002cb 01a0
0002cc 01b8
0002cd 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
0002ce 0001
0002cf 01b8
0002d0 020c
0002d1 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
0002d2 0001
0002d3 0001
0002d4 0270
0002d5 0001      	.DB  0x1,0x0,0x1,0x0,0x70,0x2,0x1,0x0
0002d6 0001
0002d7 024c
0002d8 0001
0002d9 0001      	.DB  0x1,0x0,0x4C,0x2,0x1,0x0,0x1,0x0
0002da 020c
0002db 0001
0002dc 0001
0002dd 0001      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x1,0x0
0002de 0001
0002df 0001
0002e0 0001
0002e1 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
0002e2 0001
0002e3 0001
0002e4 030e
0002e5 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0002e6 02ba
0002e7 0270
0002e8 0001
0002e9 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0002ea 0001
0002eb 01a0
0002ec 01b8
0002ed 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
0002ee 0001
0002ef 01b8
0002f0 020c
0002f1 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
0002f2 0001
0002f3 0001
0002f4 030e
0002f5 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0002f6 02ba
0002f7 0270
0002f8 0001
0002f9 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0002fa 0001
0002fb 0418
0002fc 0001
0002fd 0418      	.DB  0x1,0x0,0x18,0x4,0x1,0x0,0x18,0x4
0002fe 0418
0002ff 0001
000300 0001
000301 0001      	.DB  0x18,0x4,0x1,0x0,0x1,0x0,0x1,0x0
000302 0001
000303 0001
000304 030e
000305 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
000306 02ba
000307 0270
000308 0001
000309 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
00030a 0001
00030b 01a0
00030c 01b8
00030d 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
00030e 0001
00030f 01b8
000310 020c
000311 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
000312 0001
000313 0001
000314 0270
000315 0001      	.DB  0x1,0x0,0x1,0x0,0x70,0x2,0x1,0x0
000316 0001
000317 024c
000318 0001
000319 0001      	.DB  0x1,0x0,0x4C,0x2,0x1,0x0,0x1,0x0
00031a 020c
00031b 0001
00031c 0001
00031d 0001      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x1,0x0
00031e 0001
00031f 0001
000320 0001
000321 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
000322 020c
000323 020c
000324 0001
000325 020c      	.DB  0xC,0x2,0xC,0x2,0x1,0x0,0xC,0x2
000326 0001
000327 020c
000328 024c
000329 0001      	.DB  0x1,0x0,0xC,0x2,0x4C,0x2,0x1,0x0
00032a 0294
00032b 020c
00032c 0001
00032d 01b8      	.DB  0x94,0x2,0xC,0x2,0x1,0x0,0xB8,0x1
00032e 0187
00032f 0001
000330 0001
000331 0001      	.DB  0x87,0x1,0x1,0x0,0x1,0x0,0x1,0x0
000332 020c
000333 020c
000334 0001
000335 020c      	.DB  0xC,0x2,0xC,0x2,0x1,0x0,0xC,0x2
000336 0001
000337 020c
000338 024c
000339 0001      	.DB  0x1,0x0,0xC,0x2,0x4C,0x2,0x1,0x0
00033a 0001
00033b 0001
00033c 0001
00033d 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
00033e 0001
00033f 0001
000340 0001
000341 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000342 020c
000343 0001
000344 020c
000345 0001      	.DB  0xC,0x2,0x1,0x0,0xC,0x2,0x1,0x0
000346 020c
000347 024c
000348 0001
000349 0294      	.DB  0xC,0x2,0x4C,0x2,0x1,0x0,0x94,0x2
00034a 020c
00034b 0001
00034c 01b8
00034d 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
00034e 0001
00034f 0001
000350 0001
000351 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
000352 0294
000353 0001
000354 0294
000355 0001      	.DB  0x94,0x2,0x1,0x0,0x94,0x2,0x1,0x0
000356 020c
000357 0294
000358 0001
000359 030e      	.DB  0xC,0x2,0x94,0x2,0x1,0x0,0xE,0x3
00035a 0001
00035b 0001
00035c 0001
00035d 0187      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x87,0x1
00035e 0001
00035f 0001
000360 0001
000361 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000362 0001
000363 0001
000364 0187
000365 0001      	.DB  0x1,0x0,0x1,0x0,0x87,0x1,0x1,0x0
000366 0001
000367 014a
000368 0001
000369 0001      	.DB  0x1,0x0,0x4A,0x1,0x1,0x0,0x1,0x0
00036a 01b8
00036b 0001
00036c 01ee
00036d 0001      	.DB  0xB8,0x1,0x1,0x0,0xEE,0x1,0x1,0x0
00036e 01d3
00036f 01b8
000370 0001
000371 0187      	.DB  0xD3,0x1,0xB8,0x1,0x1,0x0,0x87,0x1
000372 0294
000373 0001
000374 030e
000375 0370      	.DB  0x94,0x2,0x1,0x0,0xE,0x3,0x70,0x3
000376 0001
000377 02ba
000378 030e
000379 0001      	.DB  0x1,0x0,0xBA,0x2,0xE,0x3,0x1,0x0
00037a 0294
00037b 0001
00037c 020c
00037d 024c      	.DB  0x94,0x2,0x1,0x0,0xC,0x2,0x4C,0x2
00037e 01ee
00037f 0001
000380 0001
000381 020c      	.DB  0xEE,0x1,0x1,0x0,0x1,0x0,0xC,0x2
000382 0001
000383 0001
000384 0187
000385 0001      	.DB  0x1,0x0,0x1,0x0,0x87,0x1,0x1,0x0
000386 0001
000387 014a
000388 0001
000389 0001      	.DB  0x1,0x0,0x4A,0x1,0x1,0x0,0x1,0x0
00038a 01b8
00038b 0001
00038c 01ee
00038d 0001      	.DB  0xB8,0x1,0x1,0x0,0xEE,0x1,0x1,0x0
00038e 01d3
00038f 01b8
000390 0001
000391 0187      	.DB  0xD3,0x1,0xB8,0x1,0x1,0x0,0x87,0x1
000392 0294
000393 0001
000394 030e
000395 0370      	.DB  0x94,0x2,0x1,0x0,0xE,0x3,0x70,0x3
000396 0001
000397 02ba
000398 030e
000399 0001      	.DB  0x1,0x0,0xBA,0x2,0xE,0x3,0x1,0x0
00039a 0294
00039b 0001
00039c 020c
00039d 024c      	.DB  0x94,0x2,0x1,0x0,0xC,0x2,0x4C,0x2
00039e 01ee
00039f 0001
0003a0 0001
0003a1 0294      	.DB  0xEE,0x1,0x1,0x0,0x1,0x0,0x94,0x2
0003a2 020c
0003a3 0001
0003a4 0187
0003a5 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
0003a6 0001
0003a7 01a0
0003a8 0001
0003a9 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
0003aa 02ba
0003ab 0001
0003ac 02ba
0003ad 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
0003ae 0001
0003af 0001
0003b0 0001
0003b1 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
0003b2 0370
0003b3 0001
0003b4 0370
0003b5 0370      	.DB  0x70,0x3,0x1,0x0,0x70,0x3,0x70,0x3
0003b6 030e
0003b7 0001
0003b8 02ba
0003b9 0294      	.DB  0xE,0x3,0x1,0x0,0xBA,0x2,0x94,0x2
0003ba 020c
0003bb 0001
0003bc 01b8
0003bd 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
0003be 0001
0003bf 0001
0003c0 0001
0003c1 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
0003c2 020c
0003c3 0001
0003c4 0187
0003c5 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
0003c6 0001
0003c7 01a0
0003c8 0001
0003c9 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
0003ca 02ba
0003cb 0001
0003cc 02ba
0003cd 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
0003ce 0001
0003cf 0001
0003d0 0001
0003d1 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
0003d2 02ba
0003d3 0001
0003d4 02ba
0003d5 02ba      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xBA,0x2
0003d6 0294
0003d7 0001
0003d8 024c
0003d9 0187      	.DB  0x94,0x2,0x1,0x0,0x4C,0x2,0x87,0x1
0003da 014a
0003db 0001
0003dc 014a
0003dd 0106      	.DB  0x4A,0x1,0x1,0x0,0x4A,0x1,0x6,0x1
0003de 0001
0003df 0001
0003e0 0001
0003e1 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
0003e2 020c
0003e3 0001
0003e4 0187
0003e5 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
0003e6 0001
0003e7 01a0
0003e8 0001
0003e9 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
0003ea 02ba
0003eb 0001
0003ec 02ba
0003ed 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
0003ee 0001
0003ef 0001
0003f0 0001
0003f1 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
0003f2 0370
0003f3 0001
0003f4 0370
0003f5 0370      	.DB  0x70,0x3,0x1,0x0,0x70,0x3,0x70,0x3
0003f6 030e
0003f7 0001
0003f8 02ba
0003f9 0294      	.DB  0xE,0x3,0x1,0x0,0xBA,0x2,0x94,0x2
0003fa 020c
0003fb 0001
0003fc 01b8
0003fd 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
0003fe 0001
0003ff 0001
000400 0001
000401 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
000402 020c
000403 0001
000404 0187
000405 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
000406 0001
000407 01a0
000408 0001
000409 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
00040a 02ba
00040b 0001
00040c 02ba
00040d 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
00040e 0001
00040f 0001
000410 0001
000411 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
000412 02ba
000413 0001
000414 02ba
000415 02ba      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xBA,0x2
000416 0294
000417 0001
000418 024c
000419 0187      	.DB  0x94,0x2,0x1,0x0,0x4C,0x2,0x87,0x1
00041a 014a
00041b 0001
00041c 014a
00041d 0106      	.DB  0x4A,0x1,0x1,0x0,0x4A,0x1,0x6,0x1
00041e 0001
00041f 0001
000420 0001
000421 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000422 020c
000423 0001
000424 020c
000425 0001      	.DB  0xC,0x2,0x1,0x0,0xC,0x2,0x1,0x0
000426 020c
000427 024c
000428 0001
000429 0294      	.DB  0xC,0x2,0x4C,0x2,0x1,0x0,0x94,0x2
00042a 020c
00042b 0001
00042c 01b8
00042d 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
00042e 0001
00042f 0001
000430 0001
000431 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000432 020c
000433 0001
000434 020c
000435 0001      	.DB  0xC,0x2,0x1,0x0,0xC,0x2,0x1,0x0
000436 020c
000437 024c
000438 0001
000439 0001      	.DB  0xC,0x2,0x4C,0x2,0x1,0x0,0x1,0x0
00043a 0001
00043b 0001
00043c 0001
00043d 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
00043e 0001
00043f 0001
000440 020c
000441 020c      	.DB  0x1,0x0,0x1,0x0,0xC,0x2,0xC,0x2
000442 0001
000443 020c
000444 0001
000445 020c      	.DB  0x1,0x0,0xC,0x2,0x1,0x0,0xC,0x2
000446 024c
000447 0001
000448 0294
000449 020c      	.DB  0x4C,0x2,0x1,0x0,0x94,0x2,0xC,0x2
00044a 0001
00044b 01b8
00044c 0187
00044d 0001      	.DB  0x1,0x0,0xB8,0x1,0x87,0x1,0x1,0x0
00044e 0001
00044f 0001
000450 0294
000451 0294      	.DB  0x1,0x0,0x1,0x0,0x94,0x2,0x94,0x2
000452 0001
000453 0294
000454 0001
000455 020c      	.DB  0x1,0x0,0x94,0x2,0x1,0x0,0xC,0x2
000456 0294
000457 0001
000458 030e
000459 0001      	.DB  0x94,0x2,0x1,0x0,0xE,0x3,0x1,0x0
00045a 0001
00045b 0001
00045c 0187
00045d 0001      	.DB  0x1,0x0,0x1,0x0,0x87,0x1,0x1,0x0
00045e 0001
00045f 0001
000460 0294
000461 020c      	.DB  0x1,0x0,0x1,0x0,0x94,0x2,0xC,0x2
000462 0001
000463 0187
000464 0001
000465 0001      	.DB  0x1,0x0,0x87,0x1,0x1,0x0,0x1,0x0
000466 01a0
000467 0001
000468 01b8
000469 02ba      	.DB  0xA0,0x1,0x1,0x0,0xB8,0x1,0xBA,0x2
00046a 0001
00046b 02ba
00046c 01b8
00046d 0001      	.DB  0x1,0x0,0xBA,0x2,0xB8,0x1,0x1,0x0
00046e 0001
00046f 0001
000470 01ee
000471 0370      	.DB  0x1,0x0,0x1,0x0,0xEE,0x1,0x70,0x3
000472 0001
000473 0370
000474 0370
000475 030e      	.DB  0x1,0x0,0x70,0x3,0x70,0x3,0xE,0x3
000476 0001
000477 02ba
000478 0294
000479 020c      	.DB  0x1,0x0,0xBA,0x2,0x94,0x2,0xC,0x2
00047a 0001
00047b 01b8
00047c 0187
00047d 0001      	.DB  0x1,0x0,0xB8,0x1,0x87,0x1,0x1,0x0
00047e 0001
00047f 0001
000480 0294
000481 020c      	.DB  0x1,0x0,0x1,0x0,0x94,0x2,0xC,0x2
000482 0001
000483 0187
000484 0001
000485 0001      	.DB  0x1,0x0,0x87,0x1,0x1,0x0,0x1,0x0
000486 01a0
000487 0001
000488 01b8
000489 02ba      	.DB  0xA0,0x1,0x1,0x0,0xB8,0x1,0xBA,0x2
00048a 0001
00048b 02ba
00048c 01b8
00048d 0001      	.DB  0x1,0x0,0xBA,0x2,0xB8,0x1,0x1,0x0
00048e 0001
00048f 0001
000490 01ee
000491 02ba      	.DB  0x1,0x0,0x1,0x0,0xEE,0x1,0xBA,0x2
000492 0001
000493 02ba
000494 02ba
000495 0294      	.DB  0x1,0x0,0xBA,0x2,0xBA,0x2,0x94,0x2
000496 0001
000497 024c
000498 0187
000499 014a      	.DB  0x1,0x0,0x4C,0x2,0x87,0x1,0x4A,0x1
00049a 0001
00049b 014a
00049c 0106
00049d 0001      	.DB  0x1,0x0,0x4A,0x1,0x6,0x1,0x1,0x0
00049e 0001
00049f 0001
0004a0 0000      	.DB  0x1,0x0,0x1,0x0,0x0,0x0
                 
                 _0x19:
0004a1 6557
0004a2 636c
0004a3 6d6f
D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P06_Dice\Debug\List\dice.asm(1425): warning: .cseg .db misalignment - padding zero byte
0004a4 0065      	.DB  0x57,0x65,0x6C,0x63,0x6F,0x6D,0x65
                 _0x2000060:
D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P06_Dice\Debug\List\dice.asm(1427): warning: .cseg .db misalignment - padding zero byte
0004a5 0001      	.DB  0x1
                 _0x2000000:
0004a6 4e2d
0004a7 4e41
0004a8 4900
0004a9 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\JavierJr\Documents\ISD\FebJun20\LabMicrocontroladores\CodeVision\P06_Dice\Debug\List\dice.asm(1430): warning: .cseg .db misalignment - padding zero byte
0004aa 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0004ab 0007      	.DW  0x07
0004ac 0904      	.DW  _str
0004ad 0942      	.DW  _0x19*2
                 
0004ae 0001      	.DW  0x01
0004af 0913      	.DW  __seed_G100
0004b0 094a      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
0004b1 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0004b2 94f8      	CLI
0004b3 27ee      	CLR  R30
0004b4 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0004b5 e0f1      	LDI  R31,1
0004b6 bff5      	OUT  MCUCR,R31
0004b7 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0004b8 e08d      	LDI  R24,(14-2)+1
0004b9 e0a2      	LDI  R26,2
0004ba 27bb      	CLR  R27
                 __CLEAR_REG:
0004bb 93ed      	ST   X+,R30
0004bc 958a      	DEC  R24
0004bd f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0004be e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0004bf e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0004c0 e0a0      	LDI  R26,LOW(__SRAM_START)
0004c1 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0004c2 93ed      	ST   X+,R30
0004c3 9701      	SBIW R24,1
0004c4 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0004c5 e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0004c6 e0f9      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0004c7 9185      	LPM  R24,Z+
0004c8 9195      	LPM  R25,Z+
0004c9 9700      	SBIW R24,0
0004ca f061      	BREQ __GLOBAL_INI_END
0004cb 91a5      	LPM  R26,Z+
0004cc 91b5      	LPM  R27,Z+
0004cd 9005      	LPM  R0,Z+
0004ce 9015      	LPM  R1,Z+
0004cf 01bf      	MOVW R22,R30
0004d0 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0004d1 9005      	LPM  R0,Z+
0004d2 920d      	ST   X+,R0
0004d3 9701      	SBIW R24,1
0004d4 f7e1      	BRNE __GLOBAL_INI_LOOP
0004d5 01fb      	MOVW R30,R22
0004d6 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0004d7 bf8b      	OUT  RAMPZ,R24
                 
                 ;GPIOR0 INITIALIZATION
0004d8 e0e0      	LDI  R30,__GPIOR0_INIT
0004d9 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0004da efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0004db bfed      	OUT  SPL,R30
0004dc e2e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0004dd bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0004de e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0004df e0d9      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0004e0 940c 06c7 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x900
                 
                 	.CSEG
                 ;/*
                 ; * dice.c
                 ; *
                 ; * Created: 28-Apr-20 4:26:07 PM
                 ; * Author: javie
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "MatrixDice.h"
                 ;#include "Letras.h"
                 ;#include "Animacion.h"
                 ;
                 ;#define DIN PORTC.0
                 ;#define LOAD PORTC.1
                 ;#define CLK PORTC.2
                 ;
                 ;unsigned int i=0, j=0;
                 ;
                 ;flash int du=262,re= 294, ri=312, mi =330,fa=349, fi=370, sol=391,si=416, la=440, li=467, ti=494;
                 ;flash int MarioBros[591]={mi*2,mi*2,1,mi*2,1,du*2,mi*2,1,sol*2,1,1,1,sol,1,1,1,du*2,1,1,sol,1,1,mi,1,1,la,1,ti,1,li,la,1 ...
                 ;1,mi*2,1,du*2,re*2,ti,1,1,du*2,1,1,sol,1,1,mi,1,1,la,1,ti,1,li,la,1,sol,mi*2,1,sol*2,la*2,1,fa*2,sol*2,1,mi*2,1,du*2,re* ...
                 ;mi*2,1,si,la,du*2,1,la,du*2,re*2,1,1,sol*2,fi*2,fa*2,ri*2,1,mi*2,1,du*4,1,du*4,du*4,1,1,1,1,1,sol*2,fi*2,fa*2,ri*2,1,mi* ...
                 ;ri*2,1,1,re*2,1,1,du*2,1,1,1,1,1,1,1,1,1,sol*2,fi*2,fa*2,ri*2,1,mi*2,1,si,la,du*2,1,la,du*2,re*2,1,1,sol*2,fi*2,fa*2,ri* ...
                 ;1,1,sol*2,fi*2,fa*2,ri*2,1,mi*2,1,si,la,du*2,1,la,du*2,re*2,1,1,ri*2,1,1,re*2,1,1,du*2,1,1,1,1,1,1,1,du*2,du*2,1,du*2,1, ...
                 ;du*2,du*2,1,du*2,1,du*2,re*2,1,1,1,1,1,1,1,1,du*2,du*2,1,du*2,1,du*2,re*2,1,mi*2,du*2,1,la,sol,1,1,1,mi*2,mi*2,1,mi*2,1, ...
                 ;1,1,sol,1,1,mi,1,1,la,1,ti,1,li,la,1,sol,mi*2,1,sol*2,la*2,1,fa*2,sol*2,1,mi*2,1,du*2,re*2,ti,1,1,du*2,1,1,sol,1,1,mi,1, ...
                 ;la*2,1,fa*2,sol*2,1,mi*2,1,du*2,re*2,ti,1,1,mi*2,du*2,1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,la*2,1,la*2,la*2,sol*2,1 ...
                 ;1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,fa*2,1,fa*2,fa*2,mi*2,1,re*2,sol,mi,1,mi,du,1,1,1,mi*2,du*2,1,sol,1,1,si,1,la, ...
                 ;sol*2,1,fa*2,mi*2,du*2,1,la,sol,1,1,1,mi*2,du*2,1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,fa*2,1,fa*2,fa*2,mi*2,1,re*2,s ...
                 ;du*2,re*2,1,mi*2,du*2,1,la,sol,1,1,1,du*2,du*2,1,du*2,1,du*2,re*2,1,1,1,1,1,1,1,1,du*2,du*2,1,du*2,1,du*2,re*2,1,mi*2,du ...
                 ;mi*2,1,sol*2,1,1,1,sol,1,1,1,mi*2,du*2,1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,la*2,1,la*2,la*2,sol*2,1,fa*2,mi*2,du*2 ...
                 ;fa*2,1,fa*2,la,1,1,1,ti,fa*2,1,fa*2,fa*2,mi*2,1,re*2,sol,mi,1,mi,du,1,1,1,0};
                 ;
                 ;
                 ;void noTono(){
                 ; 0000 0025 void noTono(){
                 
                 	.CSEG
                 _noTono:
                 ; .FSTART _noTono
                 ; 0000 0026     TCCR1B=0x00;
0004e2 e0e0      	LDI  R30,LOW(0)
0004e3 93e0 0081 	STS  129,R30
                 ; 0000 0027 }
0004e5 9508      	RET
                 ; .FEND
                 ;
                 ;void tono(float freq){
                 ; 0000 0029 void tono(float freq){
                 _tono:
                 ; .FSTART _tono
                 ; 0000 002A     float cuentas;
                 ; 0000 002B     unsigned int cuentasEnt;
                 ; 0000 002C 
                 ; 0000 002D     cuentas = 500000.0/freq;
0004e6 940e 0a9c 	CALL __PUTPARD2
0004e8 9724      	SBIW R28,4
0004e9 931a      	ST   -Y,R17
0004ea 930a      	ST   -Y,R16
                 ;	freq -> Y+6
                 ;	cuentas -> Y+2
                 ;	cuentasEnt -> R16,R17
                +
0004eb 81ee     +LDD R30 , Y + 6
0004ec 81ff     +LDD R31 , Y + 6 + 1
0004ed 8568     +LDD R22 , Y + 6 + 2
0004ee 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
0004ef e0a0     +LDI R26 , LOW ( 0x48F42400 )
0004f0 e2b4     +LDI R27 , HIGH ( 0x48F42400 )
0004f1 ef84     +LDI R24 , BYTE3 ( 0x48F42400 )
0004f2 e498     +LDI R25 , BYTE4 ( 0x48F42400 )
                 	__GETD2N 0x48F42400
0004f3 940e 09c3 	CALL __DIVF21
                +
0004f5 83ea     +STD Y + 2 , R30
0004f6 83fb     +STD Y + 2 + 1 , R31
0004f7 836c     +STD Y + 2 + 2 , R22
0004f8 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 ; 0000 002E     cuentasEnt = cuentas;
0004f9 940e 0905 	CALL __CFD1U
0004fb 018f      	MOVW R16,R30
                 ; 0000 002F     if(cuentas-cuentasEnt>=0.5)
                +
0004fc 81aa     +LDD R26 , Y + 2
0004fd 81bb     +LDD R27 , Y + 2 + 1
0004fe 818c     +LDD R24 , Y + 2 + 2
0004ff 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000500 2766      	CLR  R22
000501 2777      	CLR  R23
000502 940e 093e 	CALL __CDF1
000504 940e 0aa1 	CALL __SWAPD12
000506 940e 0971 	CALL __SUBF12
000508 01df      	MOVW R26,R30
000509 01cb      	MOVW R24,R22
                +
00050a e0e0     +LDI R30 , LOW ( 0x3F000000 )
00050b e0f0     +LDI R31 , HIGH ( 0x3F000000 )
00050c e060     +LDI R22 , BYTE3 ( 0x3F000000 )
00050d e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
00050e 940e 0a08 	CALL __CMPF12
000510 f010      	BRLO _0x3
                 ; 0000 0030         cuentasEnt++;
                +
000511 5f0f     +SUBI R16 , LOW ( - 1 )
000512 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0031     OCR1AH=(cuentasEnt-1)/256;
                 _0x3:
000513 01f8      	MOVW R30,R16
000514 9731      	SBIW R30,1
000515 2fef      	MOV  R30,R31
000516 e0f0      	LDI  R31,0
000517 93e0 0089 	STS  137,R30
                 ; 0000 0032     OCR1AL=(cuentasEnt-1)%256;
000519 2fe0      	MOV  R30,R16
00051a 50e1      	SUBI R30,LOW(1)
00051b 93e0 0088 	STS  136,R30
                 ; 0000 0033     TCCR1A=0x40;    // Timer 1 en modo de CTC
00051d e4e0      	LDI  R30,LOW(64)
00051e 93e0 0080 	STS  128,R30
                 ; 0000 0034     TCCR1B=0x09;    // Timer en CK (sin pre-escalador)
000520 e0e9      	LDI  R30,LOW(9)
000521 93e0 0081 	STS  129,R30
                 ; 0000 0035 }
000523 8119      	LDD  R17,Y+1
000524 8108      	LDD  R16,Y+0
000525 962a      	ADIW R28,10
000526 9508      	RET
                 ; .FEND
                 ;
                 ;void MandaMax7219 (unsigned int dato)
                 ; 0000 0038 {
                 _MandaMax7219:
                 ; .FSTART _MandaMax7219
                 ; 0000 0039     unsigned char i;        //Contador para 16b
                 ; 0000 003A     CLK=0;                  //Valores de inicializacion
000527 93ba      	ST   -Y,R27
000528 93aa      	ST   -Y,R26
000529 930a      	ST   -Y,R16
                 ;	dato -> Y+1
                 ;	i -> R16
00052a 9842      	CBI  0x8,2
                 ; 0000 003B     LOAD=0;                 //Valores de inicializacion
00052b 9841      	CBI  0x8,1
                 ; 0000 003C     for (i=0;i<16;i++)
00052c e000      	LDI  R16,LOW(0)
                 _0x9:
00052d 3100      	CPI  R16,16
00052e f480      	BRSH _0xA
                 ; 0000 003D     {
                 ; 0000 003E         if ((dato&0x8000)==0)
00052f 81ea      	LDD  R30,Y+2
000530 78e0      	ANDI R30,LOW(0x80)
000531 f411      	BRNE _0xB
                 ; 0000 003F             DIN=0;
000532 9840      	CBI  0x8,0
                 ; 0000 0040         else
000533 c001      	RJMP _0xE
                 _0xB:
                 ; 0000 0041             DIN=1;
000534 9a40      	SBI  0x8,0
                 ; 0000 0042         CLK=1;
                 _0xE:
000535 9a42      	SBI  0x8,2
                 ; 0000 0043         CLK=0;
000536 9842      	CBI  0x8,2
                 ; 0000 0044         dato=dato<<1;         //El siguiente bit pasa a ser el mas significativo
000537 81e9      	LDD  R30,Y+1
000538 81fa      	LDD  R31,Y+1+1
000539 0fee      	LSL  R30
00053a 1fff      	ROL  R31
00053b 83e9      	STD  Y+1,R30
00053c 83fa      	STD  Y+1+1,R31
                 ; 0000 0045     }
00053d 5f0f      	SUBI R16,-1
00053e cfee      	RJMP _0x9
                 _0xA:
                 ; 0000 0046     LOAD=1;
00053f 9a41      	SBI  0x8,1
                 ; 0000 0047     LOAD=0;
000540 9841      	CBI  0x8,1
                 ; 0000 0048 }
000541 8108      	LDD  R16,Y+0
000542 c0bd      	RJMP _0x2080003
                 ; .FEND
                 ;
                 ;void ConfiguraMax(void)
                 ; 0000 004B {
                 _ConfiguraMax:
                 ; .FSTART _ConfiguraMax
                 ; 0000 004C     DDRC=0x07;              //Salidas en PC0,PC1,PC2
000543 e0e7      	LDI  R30,LOW(7)
000544 b9e7      	OUT  0x7,R30
                 ; 0000 004D     MandaMax7219(0x0900);    //Mando a 0x09 un 0x00 (Decode Mode)
000545 e0a0      	LDI  R26,LOW(2304)
000546 e0b9      	LDI  R27,HIGH(2304)
000547 dfdf      	RCALL _MandaMax7219
                 ; 0000 004E     MandaMax7219(0x0A08);    //Mando a 0x0A un 0x08 (Decode Mode)
000548 e0a8      	LDI  R26,LOW(2568)
000549 e0ba      	LDI  R27,HIGH(2568)
00054a dfdc      	RCALL _MandaMax7219
                 ; 0000 004F     MandaMax7219(0x0B07);    //Mando a 0x0B un 0x07 (Decode Mode)
00054b e0a7      	LDI  R26,LOW(2823)
00054c e0bb      	LDI  R27,HIGH(2823)
00054d dfd9      	RCALL _MandaMax7219
                 ; 0000 0050     MandaMax7219(0x0C01);    //Mando a 0x01 un 0x01 (Decode Mode)
00054e e0a1      	LDI  R26,LOW(3073)
00054f e0bc      	LDI  R27,HIGH(3073)
000550 dfd6      	RCALL _MandaMax7219
                 ; 0000 0051     MandaMax7219(0x0F00);    //Mando a 0x0F un 0x00 (Decode Mode)
000551 e0a0      	LDI  R26,LOW(3840)
000552 e0bf      	LDI  R27,HIGH(3840)
000553 c103      	RJMP _0x2080002
                 ; 0000 0052 }
                 ; .FEND
                 ;
                 ;void MandaLetra(char letra)
                 ; 0000 0055 {
                 _MandaLetra:
                 ; .FSTART _MandaLetra
                 ; 0000 0056     letra=letra-32;          //offset de la tabla (espacio es el primer caracter)
000554 93aa      	ST   -Y,R26
                 ;	letra -> Y+0
000555 81e8      	LD   R30,Y
000556 52e0      	SUBI R30,LOW(32)
000557 83e8      	ST   Y,R30
                 ; 0000 0057     MandaMax7219(0x0100);    //elimino las columnas que no ocupo
000558 940e 07b3 	CALL SUBOPT_0x0
                 ; 0000 0058     MandaMax7219(0x0200);    //elimino las columnas que no ocupo
                 ; 0000 0059     MandaMax7219(0x0800);    //elimino las columnas que no ocupo
00055a e0a0      	LDI  R26,LOW(2048)
00055b e0b8      	LDI  R27,HIGH(2048)
00055c 940e 07bb 	CALL SUBOPT_0x1
                 ; 0000 005A 
                 ; 0000 005B     //    Unimos la columna y el valor de cada renglon
                 ; 0000 005C     MandaMax7219(0x0300|Letras[letra][4]);
00055e 9634      	ADIW R30,4
00055f 940e 07c4 	CALL SUBOPT_0x2
000561 940e 07bb 	CALL SUBOPT_0x1
                 ; 0000 005D     MandaMax7219(0x0400|Letras[letra][3]);
000563 9633      	ADIW R30,3
000564 91e4      	LPM  R30,Z
000565 e0f0      	LDI  R31,0
000566 60f4      	ORI  R31,HIGH(0x400)
000567 01df      	MOVW R26,R30
000568 940e 07bb 	CALL SUBOPT_0x1
                 ; 0000 005E     MandaMax7219(0x0500|Letras[letra][2]);
00056a 9632      	ADIW R30,2
00056b 91e4      	LPM  R30,Z
00056c e0f0      	LDI  R31,0
00056d 60f5      	ORI  R31,HIGH(0x500)
00056e 01df      	MOVW R26,R30
00056f 940e 07bb 	CALL SUBOPT_0x1
                 ; 0000 005F     MandaMax7219(0x0600|Letras[letra][1]);
000571 9631      	ADIW R30,1
000572 91e4      	LPM  R30,Z
000573 e0f0      	LDI  R31,0
000574 60f6      	ORI  R31,HIGH(0x600)
000575 01df      	MOVW R26,R30
000576 940e 07bb 	CALL SUBOPT_0x1
                 ; 0000 0060     MandaMax7219(0x0700|Letras[letra][0]);
000578 91e4      	LPM  R30,Z
000579 e0f0      	LDI  R31,0
00057a 60f7      	ORI  R31,HIGH(0x700)
00057b c02d      	RJMP _0x2080004
                 ; 0000 0061 }
                 ; .FEND
                 ;
                 ;void Dice1(char n)
                 ; 0000 0064 {
                 _Dice1:
                 ; .FSTART _Dice1
                 ; 0000 0065     //    Enviamos la columna y el valor de cada renglon
                 ; 0000 0066     MandaMax7219(0x0100|Dice[n-1][7]);
00057c 93aa      	ST   -Y,R26
                 ;	n -> Y+0
00057d 940e 07c9 	CALL SUBOPT_0x3
00057f 9637      	ADIW R30,7
000580 940e 07d1 	CALL SUBOPT_0x4
                 ; 0000 0067     MandaMax7219(0x0200|Dice[n-1][6]);
000582 940e 07c9 	CALL SUBOPT_0x3
000584 9636      	ADIW R30,6
000585 940e 07d7 	CALL SUBOPT_0x5
                 ; 0000 0068     MandaMax7219(0x0300|Dice[n-1][5]);
000587 940e 07c9 	CALL SUBOPT_0x3
000589 9635      	ADIW R30,5
00058a 940e 07c4 	CALL SUBOPT_0x2
00058c 940e 07dd 	CALL SUBOPT_0x6
                 ; 0000 0069     MandaMax7219(0x0400|Dice[n-1][4]);
00058e 9634      	ADIW R30,4
00058f 91e4      	LPM  R30,Z
000590 e0f0      	LDI  R31,0
000591 60f4      	ORI  R31,HIGH(0x400)
000592 01df      	MOVW R26,R30
000593 940e 07dd 	CALL SUBOPT_0x6
                 ; 0000 006A     MandaMax7219(0x0500|Dice[n-1][3]);
000595 9633      	ADIW R30,3
000596 91e4      	LPM  R30,Z
000597 e0f0      	LDI  R31,0
000598 60f5      	ORI  R31,HIGH(0x500)
000599 01df      	MOVW R26,R30
00059a 940e 07dd 	CALL SUBOPT_0x6
                 ; 0000 006B     MandaMax7219(0x0600|Dice[n-1][2]);
00059c 940e 07e0 	CALL SUBOPT_0x7
00059e 01df      	MOVW R26,R30
00059f 940e 07dd 	CALL SUBOPT_0x6
                 ; 0000 006C     MandaMax7219(0x0700|Dice[n-1][1]);
0005a1 940e 07e5 	CALL SUBOPT_0x8
0005a3 01df      	MOVW R26,R30
0005a4 940e 07dd 	CALL SUBOPT_0x6
                 ; 0000 006D     MandaMax7219(0x0800|Dice[n-1][0]);
0005a6 91e4      	LPM  R30,Z
0005a7 e0f0      	LDI  R31,0
0005a8 60f8      	ORI  R31,HIGH(0x800)
                 _0x2080004:
0005a9 01df      	MOVW R26,R30
0005aa df7c      	RCALL _MandaMax7219
                 ; 0000 006E }
0005ab 9621      	ADIW R28,1
0005ac 9508      	RET
                 ; .FEND
                 ;
                 ;void Dice2(char n1, char n2)
                 ; 0000 0071 {
                 _Dice2:
                 ; .FSTART _Dice2
                 ; 0000 0072     //    Enviamos la columna y el valor de cada renglon
                 ; 0000 0073     MandaMax7219(0x0100|SmallDice[n2-1][2]);
0005ad 93aa      	ST   -Y,R26
                 ;	n1 -> Y+1
                 ;	n2 -> Y+0
0005ae 940e 07ea 	CALL SUBOPT_0x9
0005b0 9632      	ADIW R30,2
0005b1 940e 07d1 	CALL SUBOPT_0x4
                 ; 0000 0074     MandaMax7219(0x0200|SmallDice[n2-1][1]);
0005b3 940e 07ea 	CALL SUBOPT_0x9
0005b5 9631      	ADIW R30,1
0005b6 940e 07d7 	CALL SUBOPT_0x5
                 ; 0000 0075     MandaMax7219(0x0300|SmallDice[n2-1][0]);
0005b8 940e 07ea 	CALL SUBOPT_0x9
0005ba 940e 07c4 	CALL SUBOPT_0x2
0005bc 940e 07f4 	CALL SUBOPT_0xA
                 ; 0000 0076     MandaMax7219(0x0600|(SmallDice[n1-1][2]<<5));
0005be 940e 0800 	CALL SUBOPT_0xB
0005c0 60f6      	ORI  R31,HIGH(0x600)
0005c1 01df      	MOVW R26,R30
0005c2 940e 07f4 	CALL SUBOPT_0xA
                 ; 0000 0077     MandaMax7219(0x0700|(SmallDice[n1-1][1]<<5));
0005c4 940e 0807 	CALL SUBOPT_0xC
0005c6 60f7      	ORI  R31,HIGH(0x700)
0005c7 01df      	MOVW R26,R30
0005c8 940e 07f4 	CALL SUBOPT_0xA
                 ; 0000 0078     MandaMax7219(0x0800|(SmallDice[n1-1][0]<<5));
0005ca 940e 080e 	CALL SUBOPT_0xD
0005cc 60f8      	ORI  R31,HIGH(0x800)
0005cd 01df      	MOVW R26,R30
0005ce df58      	RCALL _MandaMax7219
                 ; 0000 0079 }
0005cf c1ca      	RJMP _0x2080001
                 ; .FEND
                 ;
                 ;void Dice3(char n1, char n2, char n3)
                 ; 0000 007C {
                 _Dice3:
                 ; .FSTART _Dice3
                 ; 0000 007D     //    Enviamos la columna y el valor de cada renglon
                 ; 0000 007E     MandaMax7219(0x0100|SmallDice[n2-1][2]);
0005d0 93aa      	ST   -Y,R26
                 ;	n1 -> Y+2
                 ;	n2 -> Y+1
                 ;	n3 -> Y+0
0005d1 940e 0814 	CALL SUBOPT_0xE
0005d3 9632      	ADIW R30,2
0005d4 940e 07d1 	CALL SUBOPT_0x4
                 ; 0000 007F     MandaMax7219(0x0200|SmallDice[n2-1][1]);
0005d6 940e 0814 	CALL SUBOPT_0xE
0005d8 9631      	ADIW R30,1
0005d9 940e 07d7 	CALL SUBOPT_0x5
                 ; 0000 0080     MandaMax7219(0x0300|SmallDice[n2-1][0]);
0005db 940e 0814 	CALL SUBOPT_0xE
0005dd 940e 07c4 	CALL SUBOPT_0x2
0005df 940e 081e 	CALL SUBOPT_0xF
                 ; 0000 0081     MandaMax7219(0x0600|SmallDice[n3-1][2]|(SmallDice[n1-1][2]<<5));
0005e1 940e 07e0 	CALL SUBOPT_0x7
0005e3 940e 0821 	CALL SUBOPT_0x10
0005e5 940e 0800 	CALL SUBOPT_0xB
0005e7 2be6      	OR   R30,R22
0005e8 2bf7      	OR   R31,R23
0005e9 01df      	MOVW R26,R30
0005ea 940e 081e 	CALL SUBOPT_0xF
                 ; 0000 0082     MandaMax7219(0x0700|SmallDice[n3-1][1]|(SmallDice[n1-1][1]<<5));
0005ec 940e 07e5 	CALL SUBOPT_0x8
0005ee 940e 0821 	CALL SUBOPT_0x10
0005f0 940e 0807 	CALL SUBOPT_0xC
0005f2 2be6      	OR   R30,R22
0005f3 2bf7      	OR   R31,R23
0005f4 01df      	MOVW R26,R30
0005f5 940e 081e 	CALL SUBOPT_0xF
                 ; 0000 0083     MandaMax7219(0x0800|SmallDice[n3-1][0]|(SmallDice[n1-1][0]<<5));
0005f7 91e4      	LPM  R30,Z
0005f8 e0f0      	LDI  R31,0
0005f9 60f8      	ORI  R31,HIGH(0x800)
0005fa 940e 0821 	CALL SUBOPT_0x10
0005fc 940e 080e 	CALL SUBOPT_0xD
0005fe 940e 082c 	CALL SUBOPT_0x11
                 ; 0000 0084 }
                 _0x2080003:
000600 9623      	ADIW R28,3
000601 9508      	RET
                 ; .FEND
                 ;
                 ;void Dice4(char n1, char n2, char n3, char n4)
                 ; 0000 0087 {
                 _Dice4:
                 ; .FSTART _Dice4
                 ; 0000 0088     //    Enviamos la columna y el valor de cada renglon
                 ; 0000 0089     MandaMax7219(0x0100|SmallDice[n2-1][2]|(SmallDice[n4-1][2]<<5));
000602 93aa      	ST   -Y,R26
                 ;	n1 -> Y+3
                 ;	n2 -> Y+2
                 ;	n3 -> Y+1
                 ;	n4 -> Y+0
000603 940e 0831 	CALL SUBOPT_0x12
000605 9632      	ADIW R30,2
000606 91e4      	LPM  R30,Z
000607 e0f0      	LDI  R31,0
000608 60f1      	ORI  R31,HIGH(0x100)
000609 01bf      	MOVW R22,R30
00060a 940e 07ea 	CALL SUBOPT_0x9
00060c 940e 0800 	CALL SUBOPT_0xB
00060e 940e 082c 	CALL SUBOPT_0x11
                 ; 0000 008A     MandaMax7219(0x0200|SmallDice[n2-1][1]|(SmallDice[n4-1][1]<<5));
000610 940e 0831 	CALL SUBOPT_0x12
000612 9631      	ADIW R30,1
000613 91e4      	LPM  R30,Z
000614 e0f0      	LDI  R31,0
000615 60f2      	ORI  R31,HIGH(0x200)
000616 01bf      	MOVW R22,R30
000617 940e 07ea 	CALL SUBOPT_0x9
000619 940e 0807 	CALL SUBOPT_0xC
00061b 940e 082c 	CALL SUBOPT_0x11
                 ; 0000 008B     MandaMax7219(0x0300|SmallDice[n2-1][0]|(SmallDice[n4-1][0]<<5));
00061d 940e 0831 	CALL SUBOPT_0x12
00061f 91e4      	LPM  R30,Z
000620 e0f0      	LDI  R31,0
000621 60f3      	ORI  R31,HIGH(0x300)
000622 01bf      	MOVW R22,R30
000623 940e 07ea 	CALL SUBOPT_0x9
000625 940e 080e 	CALL SUBOPT_0xD
000627 940e 083b 	CALL SUBOPT_0x13
                 ; 0000 008C     MandaMax7219(0x0600|SmallDice[n3-1][2]|(SmallDice[n1-1][2]<<5));
000629 940e 07e0 	CALL SUBOPT_0x7
00062b 940e 083f 	CALL SUBOPT_0x14
00062d 940e 0800 	CALL SUBOPT_0xB
00062f 940e 083b 	CALL SUBOPT_0x13
                 ; 0000 008D     MandaMax7219(0x0700|SmallDice[n3-1][1]|(SmallDice[n1-1][1]<<5));
000631 940e 07e5 	CALL SUBOPT_0x8
000633 940e 083f 	CALL SUBOPT_0x14
000635 940e 0807 	CALL SUBOPT_0xC
000637 940e 083b 	CALL SUBOPT_0x13
                 ; 0000 008E     MandaMax7219(0x0800|SmallDice[n3-1][0]|(SmallDice[n1-1][0]<<5));
000639 91e4      	LPM  R30,Z
00063a e0f0      	LDI  R31,0
00063b 60f8      	ORI  R31,HIGH(0x800)
00063c 940e 083f 	CALL SUBOPT_0x14
00063e 940e 080e 	CALL SUBOPT_0xD
000640 940e 082c 	CALL SUBOPT_0x11
                 ; 0000 008F }
000642 9624      	ADIW R28,4
000643 9508      	RET
                 ; .FEND
                 ;
                 ;void clear(){
                 ; 0000 0091 void clear(){
                 _clear:
                 ; .FSTART _clear
                 ; 0000 0092     MandaMax7219(0x0100);
000644 940e 07b3 	CALL SUBOPT_0x0
                 ; 0000 0093     MandaMax7219(0x0200);
                 ; 0000 0094     MandaMax7219(0x0300);
000646 e0a0      	LDI  R26,LOW(768)
000647 e0b3      	LDI  R27,HIGH(768)
000648 dede      	RCALL _MandaMax7219
                 ; 0000 0095     MandaMax7219(0x0400);
000649 e0a0      	LDI  R26,LOW(1024)
00064a e0b4      	LDI  R27,HIGH(1024)
00064b dedb      	RCALL _MandaMax7219
                 ; 0000 0096     MandaMax7219(0x0500);
00064c e0a0      	LDI  R26,LOW(1280)
00064d e0b5      	LDI  R27,HIGH(1280)
00064e ded8      	RCALL _MandaMax7219
                 ; 0000 0097     MandaMax7219(0x0600);
00064f e0a0      	LDI  R26,LOW(1536)
000650 e0b6      	LDI  R27,HIGH(1536)
000651 ded5      	RCALL _MandaMax7219
                 ; 0000 0098     MandaMax7219(0x0700);
000652 e0a0      	LDI  R26,LOW(1792)
000653 e0b7      	LDI  R27,HIGH(1792)
000654 ded2      	RCALL _MandaMax7219
                 ; 0000 0099     MandaMax7219(0x0800);
000655 e0a0      	LDI  R26,LOW(2048)
000656 e0b8      	LDI  R27,HIGH(2048)
                 _0x2080002:
000657 decf      	RCALL _MandaMax7219
                 ; 0000 009A }
000658 9508      	RET
                 ; .FEND
                 ;
                 ;char str[9] = "Welcome";
                 
                 	.DSEG
                 ;char welcomeLetter=0;
                 ;// Timer3 overflow interrupt service routine
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0000 00A0 {
                 
                 	.CSEG
                 _timer3_ovf_isr:
                 ; .FSTART _timer3_ovf_isr
000659 920a      	ST   -Y,R0
00065a 921a      	ST   -Y,R1
00065b 92fa      	ST   -Y,R15
00065c 936a      	ST   -Y,R22
00065d 937a      	ST   -Y,R23
00065e 938a      	ST   -Y,R24
00065f 939a      	ST   -Y,R25
000660 93aa      	ST   -Y,R26
000661 93ba      	ST   -Y,R27
000662 93ea      	ST   -Y,R30
000663 93fa      	ST   -Y,R31
000664 b7ef      	IN   R30,SREG
000665 93ea      	ST   -Y,R30
                 ; 0000 00A1 // Reinitialize Timer3 value
                 ; 0000 00A2 // Place your code here
                 ; 0000 00A3     if(j%20==0){
000666 940e 084a 	CALL SUBOPT_0x15
000668 e1e4      	LDI  R30,LOW(20)
000669 e0f0      	LDI  R31,HIGH(20)
00066a 940e 0a84 	CALL __MODW21U
00066c 9730      	SBIW R30,0
00066d f461      	BRNE _0x1A
                 ; 0000 00A4         MandaLetra(str[welcomeLetter]);
00066e 91e0 090d 	LDS  R30,_welcomeLetter
000670 e0f0      	LDI  R31,0
000671 5fec      	SUBI R30,LOW(-_str)
000672 4ff6      	SBCI R31,HIGH(-_str)
000673 81a0      	LD   R26,Z
000674 dedf      	RCALL _MandaLetra
                 ; 0000 00A5         welcomeLetter++;
000675 91e0 090d 	LDS  R30,_welcomeLetter
000677 5fef      	SUBI R30,-LOW(1)
000678 93e0 090d 	STS  _welcomeLetter,R30
                 ; 0000 00A6     }
                 ; 0000 00A7     j++;
                 _0x1A:
00067a 940e 084f 	CALL SUBOPT_0x16
                 ; 0000 00A8     if(j<140){
00067c 940e 084a 	CALL SUBOPT_0x15
00067e 38ac      	CPI  R26,LOW(0x8C)
00067f e0e0      	LDI  R30,HIGH(0x8C)
000680 07be      	CPC  R27,R30
000681 f418      	BRSH _0x1B
                 ; 0000 00A9         TCNT3H=0xCF2C >> 8;
000682 940e 0857 	CALL SUBOPT_0x17
                 ; 0000 00AA         TCNT3L=0xCF2C & 0xff;
                 ; 0000 00AB     }else{
000684 c00a      	RJMP _0x1C
                 _0x1B:
                 ; 0000 00AC         clear();
000685 dfbe      	RCALL _clear
                 ; 0000 00AD         noTono();
000686 de5b      	RCALL _noTono
                 ; 0000 00AE         DDRB.5=0;       //disable speaker output
000687 9825      	CBI  0x4,5
                 ; 0000 00AF         TCNT3H=0;
000688 e0e0      	LDI  R30,LOW(0)
000689 93e0 0095 	STS  149,R30
                 ; 0000 00B0         TCNT3L=0;
00068b 93e0 0094 	STS  148,R30
                 ; 0000 00B1         TIMSK3=0;
00068d 93e0 0071 	STS  113,R30
                 ; 0000 00B2     }
                 _0x1C:
                 ; 0000 00B3 }
00068f 91e9      	LD   R30,Y+
000690 bfef      	OUT  SREG,R30
000691 91f9      	LD   R31,Y+
000692 91e9      	LD   R30,Y+
000693 91b9      	LD   R27,Y+
000694 91a9      	LD   R26,Y+
000695 9199      	LD   R25,Y+
000696 9189      	LD   R24,Y+
000697 9179      	LD   R23,Y+
000698 9169      	LD   R22,Y+
000699 90f9      	LD   R15,Y+
00069a 9019      	LD   R1,Y+
00069b 9009      	LD   R0,Y+
00069c 9518      	RETI
                 ; .FEND
                 ;
                 ;void tirarAnimacion(){
                 ; 0000 00B5 void tirarAnimacion(){
                 _tirarAnimacion:
                 ; .FSTART _tirarAnimacion
                 ; 0000 00B6     for (j=9;j<15;j++)
00069d e0e9      	LDI  R30,LOW(9)
00069e e0f0      	LDI  R31,HIGH(9)
00069f 93e0 0902 	STS  _j,R30
0006a1 93f0 0903 	STS  _j+1,R31
                 _0x20:
0006a3 940e 084a 	CALL SUBOPT_0x15
0006a5 971f      	SBIW R26,15
0006a6 f4f0      	BRSH _0x21
                 ; 0000 00B7     {
                 ; 0000 00B8         for (i=1;i<9;i++)
0006a7 e0e1      	LDI  R30,LOW(1)
0006a8 e0f0      	LDI  R31,HIGH(1)
0006a9 93e0 0900 	STS  _i,R30
0006ab 93f0 0901 	STS  _i+1,R31
                 _0x23:
0006ad 940e 085e 	CALL SUBOPT_0x18
0006af 9719      	SBIW R26,9
0006b0 f468      	BRSH _0x24
                 ; 0000 00B9         {
                 ; 0000 00BA             MandaMax7219((i<<8)|Animacion[j][8-i]);
0006b1 91f0 0900 	LDS  R31,_i
0006b3 e0e0      	LDI  R30,LOW(0)
0006b4 01bf      	MOVW R22,R30
0006b5 940e 0863 	CALL SUBOPT_0x19
0006b7 91e4      	LPM  R30,Z
0006b8 e0f0      	LDI  R31,0
0006b9 940e 082c 	CALL SUBOPT_0x11
                 ; 0000 00BB         }
0006bb 940e 0874 	CALL SUBOPT_0x1A
0006bd cfef      	RJMP _0x23
                 _0x24:
                 ; 0000 00BC         delay_ms(400);
0006be e9a0      	LDI  R26,LOW(400)
0006bf e0b1      	LDI  R27,HIGH(400)
0006c0 940e 08ce 	CALL _delay_ms
                 ; 0000 00BD     }
0006c2 940e 084f 	CALL SUBOPT_0x16
0006c4 cfde      	RJMP _0x20
                 _0x21:
                 ; 0000 00BE     clear();
0006c5 df7e      	RCALL _clear
                 ; 0000 00BF }
0006c6 9508      	RET
                 ; .FEND
                 ;
                 ;char mode, n1, n2, n3, n4;
                 ;void main(void)
                 ; 0000 00C3 {
                 _main:
                 ; .FSTART _main
                 ; 0000 00C4 PORTD=0x03;     //init buttons
0006c7 e0e3      	LDI  R30,LOW(3)
0006c8 b9eb      	OUT  0xB,R30
                 ; 0000 00C5 
                 ; 0000 00C6 mode=0;
0006c9 e0e0      	LDI  R30,LOW(0)
0006ca 93e0 090e 	STS  _mode,R30
                 ; 0000 00C7 ConfiguraMax();
0006cc de76      	RCALL _ConfiguraMax
                 ; 0000 00C8 DDRC.6=1;
0006cd 9a3e      	SBI  0x7,6
                 ; 0000 00C9 
                 ; 0000 00CA TCCR0B=0x01;    //init timer
0006ce e0e1      	LDI  R30,LOW(1)
0006cf bde5      	OUT  0x25,R30
                 ; 0000 00CB DDRB.5=1;       //init speaker output
0006d0 9a25      	SBI  0x4,5
                 ; 0000 00CC //// init timer 3
                 ; 0000 00CD TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
0006d1 e0e0      	LDI  R30,LOW(0)
0006d2 93e0 0090 	STS  144,R30
                 ; 0000 00CE TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (1<<CS31) | (0<<CS30);
0006d4 e0e2      	LDI  R30,LOW(2)
0006d5 93e0 0091 	STS  145,R30
                 ; 0000 00CF TCNT3H=0xCF;
0006d7 940e 0857 	CALL SUBOPT_0x17
                 ; 0000 00D0 TCNT3L=0x2C;
                 ; 0000 00D1 OCR3AH=0x30;
0006d9 e3e0      	LDI  R30,LOW(48)
0006da 93e0 0099 	STS  153,R30
                 ; 0000 00D2 OCR3AL=0xD3;
0006dc ede3      	LDI  R30,LOW(211)
0006dd 93e0 0098 	STS  152,R30
                 ; 0000 00D3 TIMSK3=0x01;
0006df e0e1      	LDI  R30,LOW(1)
0006e0 93e0 0071 	STS  113,R30
                 ; 0000 00D4 #asm("sei")
0006e2 9478      	sei
                 ; 0000 00D5 
                 ; 0000 00D6 while(j<140){
                 _0x29:
0006e3 940e 084a 	CALL SUBOPT_0x15
0006e5 38ac      	CPI  R26,LOW(0x8C)
0006e6 e0e0      	LDI  R30,HIGH(0x8C)
0006e7 07be      	CPC  R27,R30
0006e8 f548      	BRSH _0x2B
                 ; 0000 00D7     if(MarioBros[i]!=1){
0006e9 940e 087c 	CALL SUBOPT_0x1B
0006eb 940e 0a99 	CALL __GETW2PF
0006ed 9711      	SBIW R26,1
0006ee f089      	BREQ _0x2C
                 ; 0000 00D8         tono(MarioBros[i]);
0006ef 940e 087c 	CALL SUBOPT_0x1B
0006f1 940e 0a95 	CALL __GETW1PF
0006f3 940e 0a44 	CALL __CWD1
0006f5 940e 093e 	CALL __CDF1
0006f7 01df      	MOVW R26,R30
0006f8 01cb      	MOVW R24,R22
0006f9 ddec      	RCALL _tono
                 ; 0000 00D9         delay_ms(200);
0006fa eca8      	LDI  R26,LOW(200)
0006fb e0b0      	LDI  R27,0
0006fc 940e 08ce 	CALL _delay_ms
                 ; 0000 00DA         noTono();
0006fe dde3      	RCALL _noTono
                 ; 0000 00DB     }else
0006ff c004      	RJMP _0x2D
                 _0x2C:
                 ; 0000 00DC         delay_ms(200);
000700 eca8      	LDI  R26,LOW(200)
000701 e0b0      	LDI  R27,0
000702 940e 08ce 	CALL _delay_ms
                 ; 0000 00DD     i++;
                 _0x2D:
000704 940e 0874 	CALL SUBOPT_0x1A
                 ; 0000 00DE     if(i==591)
000706 940e 085e 	CALL SUBOPT_0x18
000708 34af      	CPI  R26,LOW(0x24F)
000709 e0e2      	LDI  R30,HIGH(0x24F)
00070a 07be      	CPC  R27,R30
00070b f429      	BRNE _0x2E
                 ; 0000 00DF         i=0;
00070c e0e0      	LDI  R30,LOW(0)
00070d 93e0 0900 	STS  _i,R30
00070f 93e0 0901 	STS  _i+1,R30
                 ; 0000 00E0 }
                 _0x2E:
000711 cfd1      	RJMP _0x29
                 _0x2B:
                 ; 0000 00E1 j=0;
000712 e0e0      	LDI  R30,LOW(0)
000713 93e0 0902 	STS  _j,R30
000715 93e0 0903 	STS  _j+1,R30
                 ; 0000 00E2 i=0;
000717 93e0 0900 	STS  _i,R30
000719 93e0 0901 	STS  _i+1,R30
                 ; 0000 00E3 delay_ms(500);
00071b efa4      	LDI  R26,LOW(500)
00071c e0b1      	LDI  R27,HIGH(500)
00071d 940e 08ce 	CALL _delay_ms
                 ; 0000 00E4 MandaLetra('1');
00071f e3a1      	LDI  R26,LOW(49)
000720 940e 0887 	CALL SUBOPT_0x1C
                 ; 0000 00E5 delay_ms(1000);
                 ; 0000 00E6 clear();
                 ; 0000 00E7 while (1){
                 _0x2F:
                 ; 0000 00E8     // Please write your application code here
                 ; 0000 00E9     if(!PIND.0){ // 1 Dice
000722 9948      	SBIC 0x9,0
000723 c059      	RJMP _0x32
                 ; 0000 00EA         clear();
000724 df1f      	RCALL _clear
                 ; 0000 00EB         tirarAnimacion();
000725 df77      	RCALL _tirarAnimacion
                 ; 0000 00EC         for (i=9;i<15;i++)
000726 e0e9      	LDI  R30,LOW(9)
000727 e0f0      	LDI  R31,HIGH(9)
000728 93e0 0900 	STS  _i,R30
00072a 93f0 0901 	STS  _i+1,R31
                 _0x34:
00072c 940e 085e 	CALL SUBOPT_0x18
00072e 971f      	SBIW R26,15
00072f f440      	BRSH _0x35
                 ; 0000 00ED         {
                 ; 0000 00EE             MandaMax7219(Animacion[j][8-i]);
000730 940e 0863 	CALL SUBOPT_0x19
000732 91a4      	LPM  R26,Z
000733 e0b0      	LDI  R27,0
000734 ddf2      	RCALL _MandaMax7219
                 ; 0000 00EF         }
000735 940e 0874 	CALL SUBOPT_0x1A
000737 cff4      	RJMP _0x34
                 _0x35:
                 ; 0000 00F0         if(mode==0){
000738 91e0 090e 	LDS  R30,_mode
00073a 30e0      	CPI  R30,0
00073b f431      	BRNE _0x36
                 ; 0000 00F1             srand(TCNT0);
00073c 940e 088f 	CALL SUBOPT_0x1D
                 ; 0000 00F2             n1 = rand()%6+1;
                 ; 0000 00F3             Dice1(n1);
00073e 91a0 090f 	LDS  R26,_n1
000740 de3b      	RCALL _Dice1
                 ; 0000 00F4         }else if(mode==1){
000741 c03b      	RJMP _0x37
                 _0x36:
000742 91a0 090e 	LDS  R26,_mode
000744 30a1      	CPI  R26,LOW(0x1)
000745 f459      	BRNE _0x38
                 ; 0000 00F5             srand(TCNT0);
000746 940e 088f 	CALL SUBOPT_0x1D
                 ; 0000 00F6             n1 = rand()%6+1;
                 ; 0000 00F7             srand(TCNT0);
000748 940e 089f 	CALL SUBOPT_0x1E
                 ; 0000 00F8             n2 = rand()%6+1;
                 ; 0000 00F9             Dice2(n1, n2);
00074a 91e0 090f 	LDS  R30,_n1
00074c 93ea      	ST   -Y,R30
00074d 91a0 0910 	LDS  R26,_n2
00074f de5d      	RCALL _Dice2
                 ; 0000 00FA         }else if(mode==2){
000750 c02c      	RJMP _0x39
                 _0x38:
000751 91a0 090e 	LDS  R26,_mode
000753 30a2      	CPI  R26,LOW(0x2)
000754 f481      	BRNE _0x3A
                 ; 0000 00FB             n1 = rand()%6+1;
000755 940e 08af 	CALL SUBOPT_0x1F
000757 93e0 090f 	STS  _n1,R30
                 ; 0000 00FC             srand(TCNT0);
000759 940e 089f 	CALL SUBOPT_0x1E
                 ; 0000 00FD             n2 = rand()%6+1;
                 ; 0000 00FE             srand(TCNT0);
00075b 940e 08b8 	CALL SUBOPT_0x20
                 ; 0000 00FF             n3 = rand()%6+1;
00075d 93e0 0911 	STS  _n3,R30
                 ; 0000 0100             Dice3(n1, n2, n3);
00075f 940e 08be 	CALL SUBOPT_0x21
000761 91a0 0911 	LDS  R26,_n3
000763 de6c      	RCALL _Dice3
                 ; 0000 0101         }else if(mode==3){
000764 c018      	RJMP _0x3B
                 _0x3A:
000765 91a0 090e 	LDS  R26,_mode
000767 30a3      	CPI  R26,LOW(0x3)
000768 f4a1      	BRNE _0x3C
                 ; 0000 0102             srand(TCNT0);
000769 940e 088f 	CALL SUBOPT_0x1D
                 ; 0000 0103             n1 = rand()%6+1;
                 ; 0000 0104             srand(TCNT0);
00076b 940e 089f 	CALL SUBOPT_0x1E
                 ; 0000 0105             n2 = rand()%6+1;
                 ; 0000 0106             srand(TCNT0);
00076d 940e 08b8 	CALL SUBOPT_0x20
                 ; 0000 0107             n3 = rand()%6+1;
00076f 93e0 0911 	STS  _n3,R30
                 ; 0000 0108             srand(TCNT0);
000771 940e 08b8 	CALL SUBOPT_0x20
                 ; 0000 0109             n4 = rand()%6+1;
000773 93e0 0912 	STS  _n4,R30
                 ; 0000 010A             Dice4(n1, n2, n3, n4);
000775 940e 08be 	CALL SUBOPT_0x21
000777 91e0 0911 	LDS  R30,_n3
000779 93ea      	ST   -Y,R30
00077a 91a0 0912 	LDS  R26,_n4
00077c de85      	RCALL _Dice4
                 ; 0000 010B         }
                 ; 0000 010C     }if(!PIND.1){
                 _0x3C:
                 _0x3B:
                 _0x39:
                 _0x37:
                 _0x32:
00077d 9949      	SBIC 0x9,1
00077e c011      	RJMP _0x3D
                 ; 0000 010D         mode++;
00077f 91e0 090e 	LDS  R30,_mode
000781 5fef      	SUBI R30,-LOW(1)
000782 93e0 090e 	STS  _mode,R30
                 ; 0000 010E         if(mode>3)
000784 91a0 090e 	LDS  R26,_mode
000786 30a4      	CPI  R26,LOW(0x4)
000787 f018      	BRLO _0x3E
                 ; 0000 010F             mode=0;
000788 e0e0      	LDI  R30,LOW(0)
000789 93e0 090e 	STS  _mode,R30
                 ; 0000 0110         MandaLetra(mode+49);
                 _0x3E:
00078b 91a0 090e 	LDS  R26,_mode
00078d 5caf      	SUBI R26,-LOW(49)
00078e 940e 0887 	CALL SUBOPT_0x1C
                 ; 0000 0111         delay_ms(1000);
                 ; 0000 0112         clear();
                 ; 0000 0113     }
                 ; 0000 0114 }
                 _0x3D:
000790 cf91      	RJMP _0x2F
                 ; 0000 0115 }
                 _0x3F:
000791 cfff      	RJMP _0x3F
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
                 ; .FSTART _srand
000792 93ba      	ST   -Y,R27
000793 93aa      	ST   -Y,R26
000794 81e8      	LD   R30,Y
000795 81f9      	LDD  R31,Y+1
000796 940e 0a44 	CALL __CWD1
000798 940e 08c5 	CALL SUBOPT_0x22
                 _0x2080001:
00079a 9622      	ADIW R28,2
00079b 9508      	RET
                 ; .FEND
                 _rand:
                 ; .FSTART _rand
00079c 91e0 0913 	LDS  R30,__seed_G100
00079e 91f0 0914 	LDS  R31,__seed_G100+1
0007a0 9160 0915 	LDS  R22,__seed_G100+2
0007a2 9170 0916 	LDS  R23,__seed_G100+3
                +
0007a4 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
0007a5 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
0007a6 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
0007a7 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
0007a8 940e 0a51 	CALL __MULD12U
                +
0007aa 59ee     +SUBI R30 , LOW ( - 30562 )
0007ab 48f8     +SBCI R31 , HIGH ( - 30562 )
0007ac 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
0007ad 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
0007ae 940e 08c5 	CALL SUBOPT_0x22
0007b0 01fb      	movw r30,r22
0007b1 77ff      	andi r31,0x7F
0007b2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _i:
000900           	.BYTE 0x2
                 _j:
000902           	.BYTE 0x2
                 _str:
000904           	.BYTE 0x9
                 _welcomeLetter:
00090d           	.BYTE 0x1
                 _mode:
00090e           	.BYTE 0x1
                 _n1:
00090f           	.BYTE 0x1
                 _n2:
000910           	.BYTE 0x1
                 _n3:
000911           	.BYTE 0x1
                 _n4:
000912           	.BYTE 0x1
                 __seed_G100:
000913           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0007b3 e0a0      	LDI  R26,LOW(256)
0007b4 e0b1      	LDI  R27,HIGH(256)
0007b5 940e 0527 	CALL _MandaMax7219
0007b7 e0a0      	LDI  R26,LOW(512)
0007b8 e0b2      	LDI  R27,HIGH(512)
0007b9 940c 0527 	JMP  _MandaMax7219
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1:
0007bb 940e 0527 	CALL _MandaMax7219
0007bd 81e8      	LD   R30,Y
0007be e0a5      	LDI  R26,LOW(5)
0007bf 9fea      	MUL  R30,R26
0007c0 01f0      	MOVW R30,R0
0007c1 52e6      	SUBI R30,LOW(-_Letras*2)
0007c2 4fff      	SBCI R31,HIGH(-_Letras*2)
0007c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0007c4 91e4      	LPM  R30,Z
0007c5 e0f0      	LDI  R31,0
0007c6 60f3      	ORI  R31,HIGH(0x300)
0007c7 01df      	MOVW R26,R30
0007c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3:
0007c9 81e8      	LD   R30,Y
0007ca e0f0      	LDI  R31,0
0007cb 9731      	SBIW R30,1
0007cc 940e 0a3d 	CALL __LSLW3
0007ce 56e8      	SUBI R30,LOW(-_Dice*2)
0007cf 4fff      	SBCI R31,HIGH(-_Dice*2)
0007d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
0007d1 91e4      	LPM  R30,Z
0007d2 e0f0      	LDI  R31,0
0007d3 60f1      	ORI  R31,HIGH(0x100)
0007d4 01df      	MOVW R26,R30
0007d5 940c 0527 	JMP  _MandaMax7219
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
0007d7 91e4      	LPM  R30,Z
0007d8 e0f0      	LDI  R31,0
0007d9 60f2      	ORI  R31,HIGH(0x200)
0007da 01df      	MOVW R26,R30
0007db 940c 0527 	JMP  _MandaMax7219
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0007dd 940e 0527 	CALL _MandaMax7219
0007df cfe9      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0007e0 9632      	ADIW R30,2
0007e1 91e4      	LPM  R30,Z
0007e2 e0f0      	LDI  R31,0
0007e3 60f6      	ORI  R31,HIGH(0x600)
0007e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0007e5 9631      	ADIW R30,1
0007e6 91e4      	LPM  R30,Z
0007e7 e0f0      	LDI  R31,0
0007e8 60f7      	ORI  R31,HIGH(0x700)
0007e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x9:
0007ea 81e8      	LD   R30,Y
0007eb e0f0      	LDI  R31,0
0007ec 9731      	SBIW R30,1
0007ed e0a3      	LDI  R26,LOW(3)
0007ee e0b0      	LDI  R27,HIGH(3)
0007ef 940e 0a49 	CALL __MULW12U
0007f1 53e8      	SUBI R30,LOW(-_SmallDice*2)
0007f2 4fff      	SBCI R31,HIGH(-_SmallDice*2)
0007f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0xA:
0007f4 940e 0527 	CALL _MandaMax7219
0007f6 81e9      	LDD  R30,Y+1
0007f7 e0f0      	LDI  R31,0
0007f8 9731      	SBIW R30,1
0007f9 e0a3      	LDI  R26,LOW(3)
0007fa e0b0      	LDI  R27,HIGH(3)
0007fb 940e 0a49 	CALL __MULW12U
0007fd 53e8      	SUBI R30,LOW(-_SmallDice*2)
0007fe 4fff      	SBCI R31,HIGH(-_SmallDice*2)
0007ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
000800 9632      	ADIW R30,2
000801 91a4      	LPM  R26,Z
000802 e0b0      	LDI  R27,0
000803 e0e5      	LDI  R30,LOW(5)
000804 940e 0a34 	CALL __LSLW12
000806 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
000807 9631      	ADIW R30,1
000808 91a4      	LPM  R26,Z
000809 e0b0      	LDI  R27,0
00080a e0e5      	LDI  R30,LOW(5)
00080b 940e 0a34 	CALL __LSLW12
00080d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xD:
00080e 91a4      	LPM  R26,Z
00080f e0b0      	LDI  R27,0
000810 e0e5      	LDI  R30,LOW(5)
000811 940e 0a34 	CALL __LSLW12
000813 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xE:
000814 81e9      	LDD  R30,Y+1
000815 e0f0      	LDI  R31,0
000816 9731      	SBIW R30,1
000817 e0a3      	LDI  R26,LOW(3)
000818 e0b0      	LDI  R27,HIGH(3)
000819 940e 0a49 	CALL __MULW12U
00081b 53e8      	SUBI R30,LOW(-_SmallDice*2)
00081c 4fff      	SBCI R31,HIGH(-_SmallDice*2)
00081d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
00081e 940e 0527 	CALL _MandaMax7219
000820 cfc9      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
000821 01bf      	MOVW R22,R30
000822 81ea      	LDD  R30,Y+2
000823 e0f0      	LDI  R31,0
000824 9731      	SBIW R30,1
000825 e0a3      	LDI  R26,LOW(3)
000826 e0b0      	LDI  R27,HIGH(3)
000827 940e 0a49 	CALL __MULW12U
000829 53e8      	SUBI R30,LOW(-_SmallDice*2)
00082a 4fff      	SBCI R31,HIGH(-_SmallDice*2)
00082b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
00082c 2be6      	OR   R30,R22
00082d 2bf7      	OR   R31,R23
00082e 01df      	MOVW R26,R30
00082f 940c 0527 	JMP  _MandaMax7219
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x12:
000831 81ea      	LDD  R30,Y+2
000832 e0f0      	LDI  R31,0
000833 9731      	SBIW R30,1
000834 e0a3      	LDI  R26,LOW(3)
000835 e0b0      	LDI  R27,HIGH(3)
000836 940e 0a49 	CALL __MULW12U
000838 53e8      	SUBI R30,LOW(-_SmallDice*2)
000839 4fff      	SBCI R31,HIGH(-_SmallDice*2)
00083a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00083b 2be6      	OR   R30,R22
00083c 2bf7      	OR   R31,R23
00083d 01df      	MOVW R26,R30
00083e cfb5      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14:
00083f 01bf      	MOVW R22,R30
000840 81eb      	LDD  R30,Y+3
000841 e0f0      	LDI  R31,0
000842 9731      	SBIW R30,1
000843 e0a3      	LDI  R26,LOW(3)
000844 e0b0      	LDI  R27,HIGH(3)
000845 940e 0a49 	CALL __MULW12U
000847 53e8      	SUBI R30,LOW(-_SmallDice*2)
000848 4fff      	SBCI R31,HIGH(-_SmallDice*2)
000849 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
00084a 91a0 0902 	LDS  R26,_j
00084c 91b0 0903 	LDS  R27,_j+1
00084e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00084f e0a2      	LDI  R26,LOW(_j)
000850 e0b9      	LDI  R27,HIGH(_j)
000851 91ed      	LD   R30,X+
000852 91fd      	LD   R31,X+
000853 9631      	ADIW R30,1
000854 93fe      	ST   -X,R31
000855 93ee      	ST   -X,R30
000856 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000857 ecef      	LDI  R30,LOW(207)
000858 93e0 0095 	STS  149,R30
00085a e2ec      	LDI  R30,LOW(44)
00085b 93e0 0094 	STS  148,R30
00085d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
00085e 91a0 0900 	LDS  R26,_i
000860 91b0 0901 	LDS  R27,_i+1
000862 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x19:
000863 91e0 0902 	LDS  R30,_j
000865 91f0 0903 	LDS  R31,_j+1
000867 940e 0a3d 	CALL __LSLW3
000869 58ec      	SUBI R30,LOW(-_Animacion*2)
00086a 4ffc      	SBCI R31,HIGH(-_Animacion*2)
00086b 010f      	MOVW R0,R30
00086c dff1      	RCALL SUBOPT_0x18
00086d e0e8      	LDI  R30,LOW(8)
00086e e0f0      	LDI  R31,HIGH(8)
00086f 1bea      	SUB  R30,R26
000870 0bfb      	SBC  R31,R27
000871 0de0      	ADD  R30,R0
000872 1df1      	ADC  R31,R1
000873 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
000874 e0a0      	LDI  R26,LOW(_i)
000875 e0b9      	LDI  R27,HIGH(_i)
000876 91ed      	LD   R30,X+
000877 91fd      	LD   R31,X+
000878 9631      	ADIW R30,1
000879 93fe      	ST   -X,R31
00087a 93ee      	ST   -X,R30
00087b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B:
00087c 91e0 0900 	LDS  R30,_i
00087e 91f0 0901 	LDS  R31,_i+1
000880 eaa4      	LDI  R26,LOW(_MarioBros*2)
000881 e0b4      	LDI  R27,HIGH(_MarioBros*2)
000882 0fee      	LSL  R30
000883 1fff      	ROL  R31
000884 0fea      	ADD  R30,R26
000885 1ffb      	ADC  R31,R27
000886 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
000887 940e 0554 	CALL _MandaLetra
000889 eea8      	LDI  R26,LOW(1000)
00088a e0b3      	LDI  R27,HIGH(1000)
00088b 940e 08ce 	CALL _delay_ms
00088d 940c 0644 	JMP  _clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x1D:
00088f b5e6      	IN   R30,0x26
000890 e0f0      	LDI  R31,0
000891 01df      	MOVW R26,R30
000892 940e 0792 	CALL _srand
000894 940e 079c 	CALL _rand
000896 01df      	MOVW R26,R30
000897 e0e6      	LDI  R30,LOW(6)
000898 e0f0      	LDI  R31,HIGH(6)
000899 940e 0a87 	CALL __MODW21
00089b 5fef      	SUBI R30,-LOW(1)
00089c 93e0 090f 	STS  _n1,R30
00089e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x1E:
00089f b5e6      	IN   R30,0x26
0008a0 e0f0      	LDI  R31,0
0008a1 01df      	MOVW R26,R30
0008a2 940e 0792 	CALL _srand
0008a4 940e 079c 	CALL _rand
0008a6 01df      	MOVW R26,R30
0008a7 e0e6      	LDI  R30,LOW(6)
0008a8 e0f0      	LDI  R31,HIGH(6)
0008a9 940e 0a87 	CALL __MODW21
0008ab 5fef      	SUBI R30,-LOW(1)
0008ac 93e0 0910 	STS  _n2,R30
0008ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
0008af 940e 079c 	CALL _rand
0008b1 01df      	MOVW R26,R30
0008b2 e0e6      	LDI  R30,LOW(6)
0008b3 e0f0      	LDI  R31,HIGH(6)
0008b4 940e 0a87 	CALL __MODW21
0008b6 5fef      	SUBI R30,-LOW(1)
0008b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
0008b8 b5e6      	IN   R30,0x26
0008b9 e0f0      	LDI  R31,0
0008ba 01df      	MOVW R26,R30
0008bb 940e 0792 	CALL _srand
0008bd cff1      	RJMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0008be 91e0 090f 	LDS  R30,_n1
0008c0 93ea      	ST   -Y,R30
0008c1 91e0 0910 	LDS  R30,_n2
0008c3 93ea      	ST   -Y,R30
0008c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
0008c5 93e0 0913 	STS  __seed_G100,R30
0008c7 93f0 0914 	STS  __seed_G100+1,R31
0008c9 9360 0915 	STS  __seed_G100+2,R22
0008cb 9370 0916 	STS  __seed_G100+3,R23
0008cd 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0008ce 9610      	adiw r26,0
0008cf f039      	breq __delay_ms1
                 __delay_ms0:
                +
0008d0 ef8a     +LDI R24 , LOW ( 0xFA )
0008d1 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0008d2 9701     +SBIW R24 , 1
0008d3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0008d4 95a8      	wdr
0008d5 9711      	sbiw r26,1
0008d6 f7c9      	brne __delay_ms0
                 __delay_ms1:
0008d7 9508      	ret
                 
                 __ROUND_REPACK:
0008d8 2355      	TST  R21
0008d9 f442      	BRPL __REPACK
0008da 3850      	CPI  R21,0x80
0008db f411      	BRNE __ROUND_REPACK0
0008dc ffe0      	SBRS R30,0
0008dd c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0008de 9631      	ADIW R30,1
0008df 1f69      	ADC  R22,R25
0008e0 1f79      	ADC  R23,R25
0008e1 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0008e2 e850      	LDI  R21,0x80
0008e3 2757      	EOR  R21,R23
0008e4 f411      	BRNE __REPACK0
0008e5 935f      	PUSH R21
0008e6 c0ca      	RJMP __ZERORES
                 __REPACK0:
0008e7 3f5f      	CPI  R21,0xFF
0008e8 f031      	BREQ __REPACK1
0008e9 0f66      	LSL  R22
0008ea 0c00      	LSL  R0
0008eb 9557      	ROR  R21
0008ec 9567      	ROR  R22
0008ed 2f75      	MOV  R23,R21
0008ee 9508      	RET
                 __REPACK1:
0008ef 935f      	PUSH R21
0008f0 2000      	TST  R0
0008f1 f00a      	BRMI __REPACK2
0008f2 c0ca      	RJMP __MAXRES
                 __REPACK2:
0008f3 c0c3      	RJMP __MINRES
                 
                 __UNPACK:
0008f4 e850      	LDI  R21,0x80
0008f5 2e19      	MOV  R1,R25
0008f6 2215      	AND  R1,R21
0008f7 0f88      	LSL  R24
0008f8 1f99      	ROL  R25
0008f9 2795      	EOR  R25,R21
0008fa 0f55      	LSL  R21
0008fb 9587      	ROR  R24
                 
                 __UNPACK1:
0008fc e850      	LDI  R21,0x80
0008fd 2e07      	MOV  R0,R23
0008fe 2205      	AND  R0,R21
0008ff 0f66      	LSL  R22
000900 1f77      	ROL  R23
000901 2775      	EOR  R23,R21
000902 0f55      	LSL  R21
000903 9567      	ROR  R22
000904 9508      	RET
                 
                 __CFD1U:
000905 9468      	SET
000906 c001      	RJMP __CFD1U0
                 __CFD1:
000907 94e8      	CLT
                 __CFD1U0:
000908 935f      	PUSH R21
000909 dff2      	RCALL __UNPACK1
00090a 3870      	CPI  R23,0x80
00090b f018      	BRLO __CFD10
00090c 3f7f      	CPI  R23,0xFF
00090d f408      	BRCC __CFD10
00090e c0a2      	RJMP __ZERORES
                 __CFD10:
00090f e156      	LDI  R21,22
000910 1b57      	SUB  R21,R23
000911 f4aa      	BRPL __CFD11
000912 9551      	NEG  R21
000913 3058      	CPI  R21,8
000914 f40e      	BRTC __CFD19
000915 3059      	CPI  R21,9
                 __CFD19:
000916 f030      	BRLO __CFD17
000917 efef      	SER  R30
000918 efff      	SER  R31
000919 ef6f      	SER  R22
00091a e77f      	LDI  R23,0x7F
00091b f977      	BLD  R23,7
00091c c01a      	RJMP __CFD15
                 __CFD17:
00091d 2777      	CLR  R23
00091e 2355      	TST  R21
00091f f0b9      	BREQ __CFD15
                 __CFD18:
000920 0fee      	LSL  R30
000921 1fff      	ROL  R31
000922 1f66      	ROL  R22
000923 1f77      	ROL  R23
000924 955a      	DEC  R21
000925 f7d1      	BRNE __CFD18
000926 c010      	RJMP __CFD15
                 __CFD11:
000927 2777      	CLR  R23
                 __CFD12:
000928 3058      	CPI  R21,8
000929 f028      	BRLO __CFD13
00092a 2fef      	MOV  R30,R31
00092b 2ff6      	MOV  R31,R22
00092c 2f67      	MOV  R22,R23
00092d 5058      	SUBI R21,8
00092e cff9      	RJMP __CFD12
                 __CFD13:
00092f 2355      	TST  R21
000930 f031      	BREQ __CFD15
                 __CFD14:
000931 9576      	LSR  R23
000932 9567      	ROR  R22
000933 95f7      	ROR  R31
000934 95e7      	ROR  R30
000935 955a      	DEC  R21
000936 f7d1      	BRNE __CFD14
                 __CFD15:
000937 2000      	TST  R0
000938 f40a      	BRPL __CFD16
000939 d0f2      	RCALL __ANEGD1
                 __CFD16:
00093a 915f      	POP  R21
00093b 9508      	RET
                 
                 __CDF1U:
00093c 9468      	SET
00093d c001      	RJMP __CDF1U0
                 __CDF1:
00093e 94e8      	CLT
                 __CDF1U0:
00093f 9730      	SBIW R30,0
000940 4060      	SBCI R22,0
000941 4070      	SBCI R23,0
000942 f0b1      	BREQ __CDF10
000943 2400      	CLR  R0
000944 f026      	BRTS __CDF11
000945 2377      	TST  R23
000946 f412      	BRPL __CDF11
000947 9400      	COM  R0
000948 d0e3      	RCALL __ANEGD1
                 __CDF11:
000949 2e17      	MOV  R1,R23
00094a e17e      	LDI  R23,30
00094b 2011      	TST  R1
                 __CDF12:
00094c f032      	BRMI __CDF13
00094d 957a      	DEC  R23
00094e 0fee      	LSL  R30
00094f 1fff      	ROL  R31
000950 1f66      	ROL  R22
000951 1c11      	ROL  R1
000952 cff9      	RJMP __CDF12
                 __CDF13:
000953 2fef      	MOV  R30,R31
000954 2ff6      	MOV  R31,R22
000955 2d61      	MOV  R22,R1
000956 935f      	PUSH R21
000957 df8a      	RCALL __REPACK
000958 915f      	POP  R21
                 __CDF10:
000959 9508      	RET
                 
                 __SWAPACC:
00095a 934f      	PUSH R20
00095b 01af      	MOVW R20,R30
00095c 01fd      	MOVW R30,R26
00095d 01da      	MOVW R26,R20
00095e 01ab      	MOVW R20,R22
00095f 01bc      	MOVW R22,R24
000960 01ca      	MOVW R24,R20
000961 2d40      	MOV  R20,R0
000962 2c01      	MOV  R0,R1
000963 2e14      	MOV  R1,R20
000964 914f      	POP  R20
000965 9508      	RET
                 
                 __UADD12:
000966 0fea      	ADD  R30,R26
000967 1ffb      	ADC  R31,R27
000968 1f68      	ADC  R22,R24
000969 9508      	RET
                 
                 __NEGMAN1:
00096a 95e0      	COM  R30
00096b 95f0      	COM  R31
00096c 9560      	COM  R22
00096d 5fef      	SUBI R30,-1
00096e 4fff      	SBCI R31,-1
00096f 4f6f      	SBCI R22,-1
000970 9508      	RET
                 
                 __SUBF12:
000971 935f      	PUSH R21
000972 df81      	RCALL __UNPACK
000973 3890      	CPI  R25,0x80
000974 f149      	BREQ __ADDF129
000975 e850      	LDI  R21,0x80
000976 2615      	EOR  R1,R21
                 
                 __ADDF120:
000977 3870      	CPI  R23,0x80
000978 f121      	BREQ __ADDF128
                 __ADDF121:
000979 2f57      	MOV  R21,R23
00097a 1b59      	SUB  R21,R25
00097b f12b      	BRVS __ADDF1211
00097c f412      	BRPL __ADDF122
00097d dfdc      	RCALL __SWAPACC
00097e cffa      	RJMP __ADDF121
                 __ADDF122:
00097f 3158      	CPI  R21,24
000980 f018      	BRLO __ADDF123
000981 27aa      	CLR  R26
000982 27bb      	CLR  R27
000983 2788      	CLR  R24
                 __ADDF123:
000984 3058      	CPI  R21,8
000985 f028      	BRLO __ADDF124
000986 2fab      	MOV  R26,R27
000987 2fb8      	MOV  R27,R24
000988 2788      	CLR  R24
000989 5058      	SUBI R21,8
00098a cff9      	RJMP __ADDF123
                 __ADDF124:
00098b 2355      	TST  R21
00098c f029      	BREQ __ADDF126
                 __ADDF125:
00098d 9586      	LSR  R24
00098e 95b7      	ROR  R27
00098f 95a7      	ROR  R26
000990 955a      	DEC  R21
000991 f7d9      	BRNE __ADDF125
                 __ADDF126:
000992 2d50      	MOV  R21,R0
000993 2551      	EOR  R21,R1
000994 f072      	BRMI __ADDF127
000995 dfd0      	RCALL __UADD12
000996 f438      	BRCC __ADDF129
000997 9567      	ROR  R22
000998 95f7      	ROR  R31
000999 95e7      	ROR  R30
00099a 9573      	INC  R23
00099b f413      	BRVC __ADDF129
00099c c020      	RJMP __MAXRES
                 __ADDF128:
00099d dfbc      	RCALL __SWAPACC
                 __ADDF129:
00099e df43      	RCALL __REPACK
00099f 915f      	POP  R21
0009a0 9508      	RET
                 __ADDF1211:
0009a1 f7d8      	BRCC __ADDF128
0009a2 cffb      	RJMP __ADDF129
                 __ADDF127:
0009a3 1bea      	SUB  R30,R26
0009a4 0bfb      	SBC  R31,R27
0009a5 0b68      	SBC  R22,R24
0009a6 f051      	BREQ __ZERORES
0009a7 f410      	BRCC __ADDF1210
0009a8 9400      	COM  R0
0009a9 dfc0      	RCALL __NEGMAN1
                 __ADDF1210:
0009aa 2366      	TST  R22
0009ab f392      	BRMI __ADDF129
0009ac 0fee      	LSL  R30
0009ad 1fff      	ROL  R31
0009ae 1f66      	ROL  R22
0009af 957a      	DEC  R23
0009b0 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0009b1 27ee      	CLR  R30
0009b2 27ff      	CLR  R31
0009b3 2766      	CLR  R22
0009b4 2777      	CLR  R23
0009b5 915f      	POP  R21
0009b6 9508      	RET
                 
                 __MINRES:
0009b7 efef      	SER  R30
0009b8 efff      	SER  R31
0009b9 e76f      	LDI  R22,0x7F
0009ba ef7f      	SER  R23
0009bb 915f      	POP  R21
0009bc 9508      	RET
                 
                 __MAXRES:
0009bd efef      	SER  R30
0009be efff      	SER  R31
0009bf e76f      	LDI  R22,0x7F
0009c0 e77f      	LDI  R23,0x7F
0009c1 915f      	POP  R21
0009c2 9508      	RET
                 
                 __DIVF21:
0009c3 935f      	PUSH R21
0009c4 df2f      	RCALL __UNPACK
0009c5 3870      	CPI  R23,0x80
0009c6 f421      	BRNE __DIVF210
0009c7 2011      	TST  R1
                 __DIVF211:
0009c8 f40a      	BRPL __DIVF219
0009c9 cfed      	RJMP __MINRES
                 __DIVF219:
0009ca cff2      	RJMP __MAXRES
                 __DIVF210:
0009cb 3890      	CPI  R25,0x80
0009cc f409      	BRNE __DIVF218
                 __DIVF217:
0009cd cfe3      	RJMP __ZERORES
                 __DIVF218:
0009ce 2401      	EOR  R0,R1
0009cf 9408      	SEC
0009d0 0b97      	SBC  R25,R23
0009d1 f41b      	BRVC __DIVF216
0009d2 f3d4      	BRLT __DIVF217
0009d3 2000      	TST  R0
0009d4 cff3      	RJMP __DIVF211
                 __DIVF216:
0009d5 2f79      	MOV  R23,R25
0009d6 931f      	PUSH R17
0009d7 932f      	PUSH R18
0009d8 933f      	PUSH R19
0009d9 934f      	PUSH R20
0009da 2411      	CLR  R1
0009db 2711      	CLR  R17
0009dc 2722      	CLR  R18
0009dd 2733      	CLR  R19
0009de 2744      	CLR  R20
0009df 2755      	CLR  R21
0009e0 e290      	LDI  R25,32
                 __DIVF212:
0009e1 17ae      	CP   R26,R30
0009e2 07bf      	CPC  R27,R31
0009e3 0786      	CPC  R24,R22
0009e4 0741      	CPC  R20,R17
0009e5 f030      	BRLO __DIVF213
0009e6 1bae      	SUB  R26,R30
0009e7 0bbf      	SBC  R27,R31
0009e8 0b86      	SBC  R24,R22
0009e9 0b41      	SBC  R20,R17
0009ea 9408      	SEC
0009eb c001      	RJMP __DIVF214
                 __DIVF213:
0009ec 9488      	CLC
                 __DIVF214:
0009ed 1f55      	ROL  R21
0009ee 1f22      	ROL  R18
0009ef 1f33      	ROL  R19
0009f0 1c11      	ROL  R1
0009f1 1faa      	ROL  R26
0009f2 1fbb      	ROL  R27
0009f3 1f88      	ROL  R24
0009f4 1f44      	ROL  R20
0009f5 959a      	DEC  R25
0009f6 f751      	BRNE __DIVF212
0009f7 01f9      	MOVW R30,R18
0009f8 2d61      	MOV  R22,R1
0009f9 914f      	POP  R20
0009fa 913f      	POP  R19
0009fb 912f      	POP  R18
0009fc 911f      	POP  R17
0009fd 2366      	TST  R22
0009fe f032      	BRMI __DIVF215
0009ff 0f55      	LSL  R21
000a00 1fee      	ROL  R30
000a01 1fff      	ROL  R31
000a02 1f66      	ROL  R22
000a03 957a      	DEC  R23
000a04 f243      	BRVS __DIVF217
                 __DIVF215:
000a05 ded2      	RCALL __ROUND_REPACK
000a06 915f      	POP  R21
000a07 9508      	RET
                 
                 __CMPF12:
000a08 2399      	TST  R25
000a09 f09a      	BRMI __CMPF120
000a0a 2377      	TST  R23
000a0b f042      	BRMI __CMPF121
000a0c 1797      	CP   R25,R23
000a0d f048      	BRLO __CMPF122
000a0e f429      	BRNE __CMPF121
000a0f 17ae      	CP   R26,R30
000a10 07bf      	CPC  R27,R31
000a11 0786      	CPC  R24,R22
000a12 f020      	BRLO __CMPF122
000a13 f031      	BREQ __CMPF123
                 __CMPF121:
000a14 9498      	CLZ
000a15 9488      	CLC
000a16 9508      	RET
                 __CMPF122:
000a17 9498      	CLZ
000a18 9408      	SEC
000a19 9508      	RET
                 __CMPF123:
000a1a 9418      	SEZ
000a1b 9488      	CLC
000a1c 9508      	RET
                 __CMPF120:
000a1d 2377      	TST  R23
000a1e f7c2      	BRPL __CMPF122
000a1f 1797      	CP   R25,R23
000a20 f398      	BRLO __CMPF121
000a21 f7a9      	BRNE __CMPF122
000a22 17ea      	CP   R30,R26
000a23 07fb      	CPC  R31,R27
000a24 0768      	CPC  R22,R24
000a25 f388      	BRLO __CMPF122
000a26 f399      	BREQ __CMPF123
000a27 cfec      	RJMP __CMPF121
                 
                 __ANEGW1:
000a28 95f1      	NEG  R31
000a29 95e1      	NEG  R30
000a2a 40f0      	SBCI R31,0
000a2b 9508      	RET
                 
                 __ANEGD1:
000a2c 95f0      	COM  R31
000a2d 9560      	COM  R22
000a2e 9570      	COM  R23
000a2f 95e1      	NEG  R30
000a30 4fff      	SBCI R31,-1
000a31 4f6f      	SBCI R22,-1
000a32 4f7f      	SBCI R23,-1
000a33 9508      	RET
                 
                 __LSLW12:
000a34 23ee      	TST  R30
000a35 2e0e      	MOV  R0,R30
000a36 01fd      	MOVW R30,R26
000a37 f021      	BREQ __LSLW12R
                 __LSLW12L:
000a38 0fee      	LSL  R30
000a39 1fff      	ROL  R31
000a3a 940a      	DEC  R0
000a3b f7e1      	BRNE __LSLW12L
                 __LSLW12R:
000a3c 9508      	RET
                 
                 __LSLW3:
000a3d 0fee      	LSL  R30
000a3e 1fff      	ROL  R31
                 __LSLW2:
000a3f 0fee      	LSL  R30
000a40 1fff      	ROL  R31
000a41 0fee      	LSL  R30
000a42 1fff      	ROL  R31
000a43 9508      	RET
                 
                 __CWD1:
000a44 2f6f      	MOV  R22,R31
000a45 0f66      	ADD  R22,R22
000a46 0b66      	SBC  R22,R22
000a47 2f76      	MOV  R23,R22
000a48 9508      	RET
                 
                 __MULW12U:
000a49 9ffa      	MUL  R31,R26
000a4a 2df0      	MOV  R31,R0
000a4b 9feb      	MUL  R30,R27
000a4c 0df0      	ADD  R31,R0
000a4d 9fea      	MUL  R30,R26
000a4e 2de0      	MOV  R30,R0
000a4f 0df1      	ADD  R31,R1
000a50 9508      	RET
                 
                 __MULD12U:
000a51 9f7a      	MUL  R23,R26
000a52 2d70      	MOV  R23,R0
000a53 9f6b      	MUL  R22,R27
000a54 0d70      	ADD  R23,R0
000a55 9ff8      	MUL  R31,R24
000a56 0d70      	ADD  R23,R0
000a57 9fe9      	MUL  R30,R25
000a58 0d70      	ADD  R23,R0
000a59 9f6a      	MUL  R22,R26
000a5a 2d60      	MOV  R22,R0
000a5b 0d71      	ADD  R23,R1
000a5c 9ffb      	MUL  R31,R27
000a5d 0d60      	ADD  R22,R0
000a5e 1d71      	ADC  R23,R1
000a5f 9fe8      	MUL  R30,R24
000a60 0d60      	ADD  R22,R0
000a61 1d71      	ADC  R23,R1
000a62 2788      	CLR  R24
000a63 9ffa      	MUL  R31,R26
000a64 2df0      	MOV  R31,R0
000a65 0d61      	ADD  R22,R1
000a66 1f78      	ADC  R23,R24
000a67 9feb      	MUL  R30,R27
000a68 0df0      	ADD  R31,R0
000a69 1d61      	ADC  R22,R1
000a6a 1f78      	ADC  R23,R24
000a6b 9fea      	MUL  R30,R26
000a6c 2de0      	MOV  R30,R0
000a6d 0df1      	ADD  R31,R1
000a6e 1f68      	ADC  R22,R24
000a6f 1f78      	ADC  R23,R24
000a70 9508      	RET
                 
                 __DIVW21U:
000a71 2400      	CLR  R0
000a72 2411      	CLR  R1
000a73 e190      	LDI  R25,16
                 __DIVW21U1:
000a74 0faa      	LSL  R26
000a75 1fbb      	ROL  R27
000a76 1c00      	ROL  R0
000a77 1c11      	ROL  R1
000a78 1a0e      	SUB  R0,R30
000a79 0a1f      	SBC  R1,R31
000a7a f418      	BRCC __DIVW21U2
000a7b 0e0e      	ADD  R0,R30
000a7c 1e1f      	ADC  R1,R31
000a7d c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000a7e 60a1      	SBR  R26,1
                 __DIVW21U3:
000a7f 959a      	DEC  R25
000a80 f799      	BRNE __DIVW21U1
000a81 01fd      	MOVW R30,R26
000a82 01d0      	MOVW R26,R0
000a83 9508      	RET
                 
                 __MODW21U:
000a84 dfec      	RCALL __DIVW21U
000a85 01fd      	MOVW R30,R26
000a86 9508      	RET
                 
                 __MODW21:
000a87 94e8      	CLT
000a88 ffb7      	SBRS R27,7
000a89 c004      	RJMP __MODW211
000a8a 95a0      	COM  R26
000a8b 95b0      	COM  R27
000a8c 9611      	ADIW R26,1
000a8d 9468      	SET
                 __MODW211:
000a8e fdf7      	SBRC R31,7
000a8f df98      	RCALL __ANEGW1
000a90 dfe0      	RCALL __DIVW21U
000a91 01fd      	MOVW R30,R26
000a92 f40e      	BRTC __MODW212
000a93 df94      	RCALL __ANEGW1
                 __MODW212:
000a94 9508      	RET
                 
                 __GETW1PF:
000a95 9005      	LPM  R0,Z+
000a96 91f4      	LPM  R31,Z
000a97 2de0      	MOV  R30,R0
000a98 9508      	RET
                 
                 __GETW2PF:
000a99 91a5      	LPM  R26,Z+
000a9a 91b4      	LPM  R27,Z
000a9b 9508      	RET
                 
                 __PUTPARD2:
000a9c 939a      	ST   -Y,R25
000a9d 938a      	ST   -Y,R24
000a9e 93ba      	ST   -Y,R27
000a9f 93aa      	ST   -Y,R26
000aa0 9508      	RET
                 
                 __SWAPD12:
000aa1 2e18      	MOV  R1,R24
000aa2 2f86      	MOV  R24,R22
000aa3 2d61      	MOV  R22,R1
000aa4 2e19      	MOV  R1,R25
000aa5 2f97      	MOV  R25,R23
000aa6 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000aa7 2e1b      	MOV  R1,R27
000aa8 2fbf      	MOV  R27,R31
000aa9 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000aaa 2e1a      	MOV  R1,R26
000aab 2fae      	MOV  R26,R30
000aac 2de1      	MOV  R30,R1
000aad 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

AT90USB1286 register use summary:
r0 :  44 r1 :  38 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  11 r17:   8 r18:   5 r19:   4 r20:  14 r21:  53 r22:  75 r23:  65 
r24:  42 r25:  29 r26: 135 r27:  71 r28:   7 r29:   1 r30: 302 r31: 150 
x  :  11 y  :  76 z  :  34 
Registers used: 22 out of 35 (62.9%)

AT90USB1286 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  14 add   :  16 
adiw  :  29 and   :   2 andi  :   2 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   0 break :   0 breq  :  14 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   1 brmi  :   7 brne  :  24 brpl  :   7 brsh  :   6 brtc  :   2 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  : 154 
cbi   :   6 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  24 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :  10 
cp    :   5 cpc   :  10 cpi   :  22 cpse  :   0 dec   :  10 des   :   0 
elpm  :   0 eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 
ijmp  :   0 in    :   4 inc   :   1 jmp   :  44 ld    :  22 ldd   :  20 
ldi   : 174 lds   :  30 lpm   :  57 lsl   :  17 lsr   :   2 mov   :  43 
movw  :  54 mul   :  14 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 
or    :   8 ori   :  20 out   :  11 pop   :  12 push  :  11 rcall :  43 
ret   :  65 reti  :   1 rjmp  :  47 rol   :  30 ror   :  12 sbc   :   9 
sbci  :  22 sbi   :   5 sbic  :   2 sbis  :   0 sbiw  :  20 sbr   :   1 
sbrc  :   1 sbrs  :   2 sec   :   3 seh   :   0 sei   :   1 sen   :   0 
ser   :   8 ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    :  40 std   :   6 sts   :  41 sub   :   6 subi  :  24 
swap  :   0 tst   :  16 wdr   :   1 
Instructions used: 76 out of 117 (65.0%)

AT90USB1286 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00155c   3216   2252   5468  131072   4.2%
[.dseg] 0x000100 0x000917      0     23     23    8192   0.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings

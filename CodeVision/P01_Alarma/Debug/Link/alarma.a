;/*
; * alarma.c
; *
; * Created: 11-Feb-20 5:39:55 PM
; * Author: iavie
; */
;
;// LCD config
;#asm
;PCODE: $00000000 VOL: 0
    .equ __lcd_port=0x11
;PCODE: $00000001 VOL: 0
    .equ __lcd_EN=4
;PCODE: $00000002 VOL: 0
    .equ __lcd_RS=5
;PCODE: $00000003 VOL: 0
    .equ __lcd_D4=0
;PCODE: $00000004 VOL: 0
    .equ __lcd_D5=1
;PCODE: $00000005 VOL: 0
    .equ __lcd_D6=2
;PCODE: $00000006 VOL: 0
    .equ __lcd_D7=3
;PCODE: $00000007 VOL: 0
;PCODE: $00000008 VOL: 0
; 0000 0011 #endasm
;
;// DS1302 config
;#asm
;PCODE: $00000009 VOL: 0
	.equ __ds1302_port=0x0B
;PCODE: $0000000A VOL: 0
	.equ __ds1302_io=2
;PCODE: $0000000B VOL: 0
	.equ __ds1302_sclk=1
;PCODE: $0000000C VOL: 0
	.equ __ds1302_rst=0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0019 #endasm
;
;#include <90usb1286.h>
;PCODE: $0000000F VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000010 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000011 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000012 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000013 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000014 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000015 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000016 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000017 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000018 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $00000019 VOL: 0
	#endif
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;#include <ds1302.h>
;#include <display.h>

	.CSEG
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;	TableSetup -> Y+1
;	i -> R16
;PCODE: $00000024 VOL: 0
; 0000 001D     SBI __lcd_port-1,__lcd_EN
    SBI __lcd_port-1,__lcd_EN
;PCODE: $00000025 VOL: 0
    SBI __lcd_port-1,__lcd_RS
;PCODE: $00000026 VOL: 0
    SBI __lcd_port-1,__lcd_D4
;PCODE: $00000027 VOL: 0
    SBI __lcd_port-1,__lcd_D5
;PCODE: $00000028 VOL: 0
    SBI __lcd_port-1,__lcd_D6
;PCODE: $00000029 VOL: 0
    SBI __lcd_port-1,__lcd_D7
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
    SBI __lcd_port,__lcd_EN  // EN=1;
;PCODE: $00000053 VOL: 0
    CBI __lcd_port,__lcd_EN // EN=0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;	dato -> Y+0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
	SBI __lcd_port,__lcd_D7
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
	CBI __lcd_port,__lcd_D7
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
	SBI __lcd_port,__lcd_D6
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
	CBI __lcd_port,__lcd_D6
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
	SBI __lcd_port,__lcd_D5
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
	CBI __lcd_port,__lcd_D5
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
	SBI __lcd_port,__lcd_D4
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
	CBI __lcd_port,__lcd_D4
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;	Comando -> Y+1
;	tempComando -> R16
;PCODE: $0000008A VOL: 0
	CBI __lcd_port,__lcd_RS
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;	dato -> Y+1
;	tempdato -> R16
;PCODE: $000000A8 VOL: 0
	SBI __lcd_port,__lcd_RS
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;	i -> R16
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;	tiempo -> Y+1
;	i -> R16
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;	Mensaje -> Y+1
;	i -> R16
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;	x -> Y+1
;	y -> Y+0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;	NoCaracter -> Y+3
;	datos -> Y+1
;	i -> R16
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// Alarm
;
;unsigned char alarmFlag; // Alarm flag to turn alarm on and off
;eeprom unsigned char AH, AM; // Variables for alarm on EEPROM
;
;unsigned char H=0,M=0,S=0; // Variables for clock
;
;unsigned char time[16];
;
;// ADC
;
;// ADC variables
;float temperature;
;unsigned int Temp;
;
;// Voltage Reference: Int., cap. on AREF
;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0036 {
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0037 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000018E VOL: 0
;	adc_input -> Y+0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 0038 // Delay needed for the stabilization of the ADC input voltage
; 0000 0039 delay_us(10);
;PCODE: $00000192 VOL: 0
; 0000 003A // Start the AD conversion
; 0000 003B ADCSRA|=(1<<ADSC);
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 003C // Wait for the AD conversion to complete
; 0000 003D while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 003E ADCSRA|=(1<<ADIF);
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 003F return ADCW;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 0040 }
;PCODE: $000001A2 VOL: 0
;
;
;// Update ADC function
;void updateADC(){
; 0000 0044 void updateADC(){
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0045     // Convert ADC values to temperature
; 0000 0046     temperature = (read_adc(7)*256.0)/1024.0; // Agus nos dio esta funcion
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0047     Temp = temperature;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0048     // TEMPORAL print statement for DEV purposes only
; 0000 0049 }
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;
;// Counter
;unsigned char i=0;
;
;// Tone
;// Play frequency function
;void tono(float freq){
; 0000 0050 void tono(float freq){
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 0051     if(freq == 0)
;PCODE: $000001B6 VOL: 0
;	freq -> Y+0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 0052         TCCR1B=0x00;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 0053     else{
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 0054         float cuentas;
; 0000 0055         unsigned int cuentasEnt;
; 0000 0056 
; 0000 0057         cuentas = 500000.0/freq;
;PCODE: $000001BE VOL: 0
;	freq -> Y+6
;	cuentas -> Y+2
;	cuentasEnt -> Y+0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 0058         cuentasEnt = cuentas;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 0059         if(cuentas-cuentasEnt>=0.5)
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 005A             cuentasEnt++;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 005B         OCR1AH=(cuentasEnt-1)/256;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 005C         OCR1AL=(cuentasEnt-1)%256;
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 005D         TCCR1A=0x40;    // Timer 1 en modo de CTC
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 005E         TCCR1B=0x09;    // Timer en CK (sin pre-escalador)
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 005F     }
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0060 }
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;
;int k=0;
;char kFlag=0;
;
;// Play tone or song function
;void playTone(){
; 0000 0066 void playTone(){
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0067     tono(k);
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 0068     if(kFlag==0)
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 0069         k+=50;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 006A     else
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 006B         k-=50;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 006C     if(k>500)
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 006D         kFlag=1;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 006E     else if (k<=50)
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 006F         kFlag=0;
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0070 }
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;
;// LCD
;void printTime(){
; 0000 0073 void printTime(){
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 0074     sprintf(time, "H:%02i:%02i:%02i T:%02i", H, M, S, Temp);
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 0075     MoveCursor(0,0);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0076     StringLCDVar(time);
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0077     sprintf(time, "A: %02i:%02i   ", AH, AM);
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0078     MoveCursor(0,1);
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0079     StringLCDVar(time);
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 007A }
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;
;// Clock
;void updateClock(){
; 0000 007D void updateClock(){
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 007E     rtc_get_time(&H, &M, &S);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 007F }
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;
;void main(void)
; 0000 0082 {
;PCODE: $00000247 VOL: 0
; 0000 0083 
; 0000 0084 // ADC initialization
; 0000 0085 // ADC Clock frequency: 1000.000 kHz
; 0000 0086 // ADC Voltage Reference: Int., cap. on AREF
; 0000 0087 // ADC High Speed Mode: On
; 0000 0088 // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
; 0000 0089 // ADC4: On, ADC5: On, ADC6: On, ADC7: Off
; 0000 008A DIDR0=(1<<ADC7D) | (0<<ADC6D) | (0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 008B ADMUX=ADC_VREF_TYPE;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 008C ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 008D ADCSRB=(1<<ADHSM);
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 008E 
; 0000 008F // LCD
; 0000 0090 
; 0000 0091 SetupLCD();
;PCODE: $00000250 VOL: 0
; 0000 0092 
; 0000 0093 // DS1302
; 0000 0094 rtc_init(0,0,0);
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 0095 
; 0000 0096 // Tone
; 0000 0097 DDRB.5=1;
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0098 
; 0000 0099 // First actions
; 0000 009A PORTC = 0x0F;
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 009B rtc_get_time(&H, &M, &S);
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 009C printTime();
;PCODE: $00000261 VOL: 0
; 0000 009D 
; 0000 009E while (1){
;PCODE: $00000262 VOL: 0
; 0000 009F     // Please write your application code here
; 0000 00A0 
; 0000 00A1         // Counter
; 0000 00A2         delay_ms(50);
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 00A3         i++;
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 00A4 
; 0000 00A5         // ADC
; 0000 00A6         updateADC();
;PCODE: $00000269 VOL: 0
; 0000 00A7 
; 0000 00A8         // Update clock
; 0000 00A9         updateClock();
;PCODE: $0000026A VOL: 0
; 0000 00AA         // Print values un LCD display
; 0000 00AB         printTime();
;PCODE: $0000026B VOL: 0
; 0000 00AC 
; 0000 00AD         // 100 ms delay
; 0000 00AE         if(i%2==0){
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 00AF            if(alarmFlag==1) {
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 00B0             playTone();
;PCODE: $00000275 VOL: 0
; 0000 00B1            }
; 0000 00B2            else
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 00B3             tono(0);
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 00B4         }
;PCODE: $0000027A VOL: 0
; 0000 00B5 
; 0000 00B6         // 500 ms delay, reset counter
; 0000 00B7         if(i%10==0)
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 00B8             i=0;
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 00B9         // Turns alarm flag on when H, M and S match
; 0000 00BA         if(S==0 && M==AM && H==AH)
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 00BB             alarmFlag=1;
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 00BC 
; 0000 00BD         // Clock
; 0000 00BE 
; 0000 00BF         // If alarm is on, switch will turn alarm off without
; 0000 00C0         //  changing the default variable
; 0000 00C1         if(!PINC.0){
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 00C2             if(alarmFlag==1)
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 00C3                 alarmFlag = 0;
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 00C4             else{
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
; 0000 00C5                 H++;
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 00C6                 rtc_set_time(H, M, S);
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 00C7             }
;PCODE: $000002AC VOL: 0
; 0000 00C8         }
; 0000 00C9         // If alarm is on, switch will turn alarm off without
; 0000 00CA         //  changing the default variable
; 0000 00CB         if(!PINC.1){
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 00CC             if(alarmFlag==1)
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 00CD                 alarmFlag = 0;
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 00CE             else{
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 00CF                 M++;
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 00D0                 rtc_set_time(H, M, S);
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 00D1             }
;PCODE: $000002C1 VOL: 0
; 0000 00D2         }
; 0000 00D3         // Verify the correct range on clock time
; 0000 00D4         if(S>59)
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 00D5             S=0;
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 00D6         if(M>59)
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 00D7             M=0;
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 00D8         if(H>23)
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 00D9             H=0;
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 00DA         if(AM>59)
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 00DB             AM=0;
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 00DC         if(AH>23)
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 00DD             AH=0;
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 00DE 
; 0000 00DF         // Alarm
; 0000 00E0 
; 0000 00E1         // If alarm is on, switch will turn alarm off without
; 0000 00E2         //  changing the default variable
; 0000 00E3         if(!PINC.2){
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 00E4             if(alarmFlag==1)
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 00E5                 alarmFlag = 0;
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 00E6             else
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 00E7                 AH++;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 00E8         }
;PCODE: $000002F3 VOL: 0
; 0000 00E9         // If alarm is on, switch will turn alarm off without
; 0000 00EA         //  changing the default variable
; 0000 00EB         if(!PINC.3){
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 00EC             if(alarmFlag==1)
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 00ED                 alarmFlag = 0;
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0000 00EE             else
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 00EF                 AM++;
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 00F0         }
;PCODE: $00000303 VOL: 0
; 0000 00F1         // Verify the correct range on alarm time
; 0000 00F2         if(AM>59)
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 00F3             AM=0;
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 00F4         if(AH>23)
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 00F5             AH=0;
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 00F6     }
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 00F7 }
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0

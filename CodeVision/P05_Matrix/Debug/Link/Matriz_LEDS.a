;/*
; * Matriz_LEDS.c
; *
; * Created: 21/04/2020 05:36:03 p. m.
; * Author: Chucho López Ortega
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include "Letras.h"
;
;#define DIN PORTC.0
;#define LOAD PORTC.1
;#define CLK PORTC.2
;
;void MandaMax7219 (unsigned int dato)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0012     unsigned char i;        //Contador para 16b
; 0000 0013     CLK=0;                  //Valores de inicializacion
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	dato -> Y+1
;	i -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0014     LOAD=0;                 //Valores de inicializacion
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0015     for (i=0;i<16;i++)
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0016     {
; 0000 0017         if ((dato&0x8000)==0)
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0018             DIN=0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0019         else
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001A             DIN=1;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001B         CLK=1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 001C         CLK=0;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 001D         dato=dato<<1;         //El siguiente bit pasa a ser el mas significativo
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001E     }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001F     LOAD=1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0020     LOAD=0;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0021 }
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;
;void ConfiguraMax(void)
; 0000 0024 {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0025     DDRC=0x07;              //Salidas en PC0,PC1,PC2
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0026     MandaMax7219(0x0900);    //Mando a 0x09 un 0x00 (Decode Mode)
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0027     MandaMax7219(0x0A08);    //Mando a 0x0A un 0x08 (Decode Mode)
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0028     MandaMax7219(0x0B07);    //Mando a 0x0B un 0x07 (Decode Mode)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0029     MandaMax7219(0x0C01);    //Mando a 0x01 un 0x01 (Decode Mode)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002A     MandaMax7219(0x0F00);    //Mando a 0x0F un 0x00 (Decode Mode)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 002B }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;
;void MandaLetra(char letra)
; 0000 002E {
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 002F     unsigned char i;
; 0000 0030     letra=letra-32;          //offset de la tabla (espacio es el primer caracter)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;	letra -> Y+1
;	i -> R17
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0031     MandaMax7219(0x0100);    //elimino las columnas que no ocupo
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0032     MandaMax7219(0x0200);    //elimino las columnas que no ocupo
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0033     MandaMax7219(0x0800);    //elimino las columnas que no ocupo
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0034 
; 0000 0035     for (i=3;i<8;i++)
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0036         MandaMax7219((i<<8)|Letras[letra][7-i]);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 003E }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;
;void main(void)
; 0000 0041 {
;PCODE: $00000081 VOL: 0
; 0000 0042 
; 0000 0043 PORTD=0x07;     //seteo de botones
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0044 ConfiguraMax();
;PCODE: $00000084 VOL: 0
; 0000 0045 while (1)
;PCODE: $00000085 VOL: 0
; 0000 0046     {
; 0000 0047     // Please write your application code here
; 0000 0048         MandaMax7219(0x01FF);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0049         MandaMax7219(0x02FF);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 004A         MandaMax7219(0x03FF);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 004B         MandaMax7219(0x04FF);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 004C         MandaMax7219(0x05FF);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 004D         MandaMax7219(0x06FF);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 004E         MandaMax7219(0x07FF);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 004F         MandaMax7219(0x08FF);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0050         delay_ms(2000);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0051         MandaLetra('F');
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0052         delay_ms(2000);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0053     }
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0054 }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
